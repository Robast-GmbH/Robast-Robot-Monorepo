{
        "version": "2.0.0",
        "tasks": [
                {
                        "label": "test",
                        "detail": "Run all unit tests and show results!",
                        "type": "shell",
                        "command": "colcon test --merge-install; colcon test-result",
                        "group": {
                                "kind": "test",
                                "isDefault": true
                        }
                },
                {
                        "label": "debug_build",
                        "detail": "Symlink Build of the project",
                        "type": "shell",
                        "command": "clear; colcon build --symlink-install DCMAKE_BUILD_TYPE=Debug' -Wall -Wextra -Wpedantic --packages-skip robast_map_update_module ndt_omp_ros2 graph_based_slam scanmatcher robast_nav_recoveries robast_nav_interim_goal",
                        "problemMatcher": []
                },
                {
                        "label": "build-ros-theron",
                        "detail": "Symlink Build for Ros-Theron.",
                        "type": "shell",
                        "command": "colcon build --symlink-install --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' -Wall -Wextra -Wpedantic --packages-skip robast_map_update_module ndt_omp_ros2 graph_based_slam scanmatcher robast_nav_recoveries robast_nav_interim_goal",
                        "problemMatcher": []
                },
                {
                        "label": "clean-build-ros-theron",
                        "detail": "Purges and symlink builds for Ros-Theron.",
                        "dependsOn": [
                                "purge",
                                "build-ros-theron"
                        ],
                        "dependsOrder": "sequence",
                        "problemMatcher": []
                },
                {
                        "label": "purge",
                        "detail": "Purge workspace by deleting all generated files.",
                        "type": "shell",
                        "command": "rm -fr build install log; py3clean .",
                        "problemMatcher": []
                },
                {
                        "label": "default_startup",
                        "detail": "Starts Nav, slam, rviz",
                        "dependsOn": [
                                "start laser fusion",
                                "start slam_toolbox",
                                "start nav_without_localization",
                                "start rviz"
                        ],
                        "problemMatcher": []
                },
                {
                        "label": "default_startup_robot_localization",
                        "detail": "Starts Nav, slam, robot_localization for odom->base, behavior_tree_server_collection, rviz",
                        "dependsOn": [
                                "start laser fusion",
                                "start robot_localization",
                                "start slam_toolbox",
                                "start nav_without_localization",
                                "start behavior_tree_server_collection",
                                "start rviz",
                                "start jetson mock"
                        ],
                        "problemMatcher": []
                },
                {
                        "type": "shell",
                        "label": "start keepout_mask",
                        "command": "source /workspace/install/setup.bash; ros2 launch nav_bringup mask_server_launch.py",
                        "problemMatcher": [],
                        "presentation": {
                                "echo": false,
                                "focus": false,
                                "group": "default_start"
                        }
                },
                {
                        "type": "shell",
                        "label": "start door_handle_detection_in_sim",
                        "command": "source /workspace/install/setup.bash; ros2 launch door_handle_detector_sim door_handle_detection_sim.launch.py",
                        "problemMatcher": [],
                        "presentation": {
                                "echo": false,
                                "focus": true
                        }
                },
                {
                        "type": "shell",
                        "label": "start door_handle_detection",
                        "command": "source /workspace/install/setup.bash; ros2 launch door_handle_detection yolo.launch.py",
                        "problemMatcher": [],
                        "presentation": {
                                "echo": false,
                                "focus": true
                        }
                },
                {
                        "type": "shell",
                        "label": "start rviz",
                        "command": "source /workspace/install/setup.bash; ros2 launch nav_bringup rviz_launch.py",
                        "problemMatcher": [],
                        "presentation": {
                                "echo": false,
                                "focus": true
                        }
                },
                {
                        "type": "shell",
                        "label": "start nav_without_localization",
                        "command": "clear; source /workspace/install/setup.bash; ros2 launch nav_bringup nav_without_localization_launch.py",
                        "problemMatcher": [],
                        "presentation": {
                                "echo": false,
                                "focus": true
                        }
                },
                {
                        "type": "shell",
                        "label": "start nav_without_localization",
                        "command": "clear; source /workspace/install/setup.bash; ros2 launch nav_bringup nav_without_localization_launch.py",
                        "problemMatcher": [],
                        "presentation": {
                                "echo": false,
                                "focus": true
                        }
                },
                {
                        "type": "shell",
                        "label": "start self_mapping",
                        "command": "source /workspace/install/setup.bash; ros2 launch self_mapping self_mapping.launch.py",
                        "problemMatcher": [],
                        "presentation": {
                                "echo": false,
                                "focus": true
                        }
                },
                {
                        "label": "start nav_with_feuerplan_static_layer",
                        "detail": "Publishes feurplan occupancy grid and starts nav with feuerplan as static layer",
                        "dependsOn": [
                                "publish feuerplan",
                                "start slam_toolbox",
                                "start nav_without_localization",
                                "start rviz",
                                "start robot_localization"
                        ]
                },
                {
                        "type": "shell",
                        "label": "start nav_without_localization_with_bt_server_collection",
                        "command": "source install/setup.bash; ros2 launch nav_bringup nav_without_localization_with_bt_server_collection_launch.py",
                        "problemMatcher": [],
                        "presentation": {
                                "echo": false,
                                "focus": true
                        }
                },
                {
                        "type": "shell",
                        "label": "start behavior_tree_server_collection",
                        "command": "source /workspace/install/setup.bash; ros2 launch behavior_tree_server_collection bt_server_collection_launch.py",
                        "problemMatcher": [],
                        "presentation": {
                                "echo": false,
                                "focus": true
                        }
                },
                {
                        "type": "shell",
                        "label": "start clicked_point_to_nav_pose",
                        "command": "source /workspace/install/setup.bash; ros2 launch clicked_point_to_nav_pose clicked_point_to_nav_pose_launch.py",
                        "problemMatcher": [],
                        "presentation": {
                                "echo": false,
                                "focus": true
                        }
                },
                {
                        "type": "shell",
                        "label": "start nav_without_localization_with_door_bells_launch",
                        "command": "source /workspace/install/setup.bash; ros2 launch nav_bringup nav_without_localization_launch.py use_interim_goal:=true",
                        "problemMatcher": [],
                        "presentation": {
                                "echo": false,
                                "focus": true
                        }
                },
                {
                        "type": "shell",
                        "label": "start slam_toolbox",
                        "command": "source /workspace/install/setup.bash; ros2 launch nav_bringup slam_toolbox_launch.py",
                        "problemMatcher": [],
                        "presentation": {
                                "echo": false,
                                "focus": true
                        }
                },
                {
                        "type": "shell",
                        "label": "start laser fusion",
                        "command": "source /workspace/install/setup.bash; ros2 launch ira_laser_tools laserscan_multi_merger.launch.py",
                        "problemMatcher": [],
                        "presentation": {
                                "echo": false,
                                "focus": false
                        }
                },
                {
                        "type": "shell",
                        "label": "start jetson mock",
                        "command": "source /workspace/install/setup.bash; ros2 launch jetson_mock jetson_mock_launch.py",
                        "problemMatcher": [],
                        "presentation": {
                                "echo": false,
                                "focus": false
                        }
                },
                {
                        "type": "shell",
                        "label": "start amcl_with_slam_mapping",
                        "command": "source /workspace/install/setup.bash; ros2 launch nav_bringup slam_with_amcl_launch.py",
                        "problemMatcher": [],
                        "presentation": {
                                "echo": false,
                                "focus": true
                        }
                },
                {
                        "type": "shell",
                        "label": "start robot_localization",
                        "command": "source /workspace/install/setup.bash; ros2 launch nav_bringup robot_localization_odom_to_base_launch.py;",
                        "problemMatcher": [],
                        "presentation": {
                                "echo": false,
                                "focus": true
                        }
                },
                {
                        "type": "shell",
                        "label": "start robot_localization_global",
                        "command": "source /workspace/install/setup.bash; ros2 launch nav_bringup robot_localization_map_to_odom_launch.py;",
                        "problemMatcher": [],
                        "presentation": {
                                "echo": false,
                                "focus": true
                        }
                },
                {
                        "label": "start nav_action_node and robot_pose_publisher (open-rmf)",
                        "detail": "Starts the nav nodes that are required to run open-rmf",
                        "dependsOn": [
                                "start nav_action_node",
                                "start robot_pose_publisher"
                        ]
                },
                {
                        "label": "start nav_action_node and robot_pose_publisher for sim (open-rmf)",
                        "detail": "Starts the nav nodes that are required to run open-rmf",
                        "dependsOn": [
                                "start nav_action_node",
                                "start robot_pose_publisher sim"
                        ]
                },
                {
                        "type": "shell",
                        "label": "start nav_action_node",
                        "command": "source /workspace/install/setup.bash; ros2 launch nav_action_node nav_action_node.launch.py",
                        "problemMatcher": [],
                        "presentation": {
                                "echo": false,
                                "focus": true,
                        }
                },
                {
                        "type": "shell",
                        "label": "start robot_pose_publisher",
                        "command": "source /workspace/install/setup.bash; ros2 launch robot_pose_publisher robot_pose_publisher.launch.py",
                        "problemMatcher": [],
                        "presentation": {
                                "echo": false,
                                "focus": true,
                        }
                },
                {
                        "type": "shell",
                        "label": "start robot_pose_publisher sim",
                        "command": "source /workspace/install/setup.bash; ros2 launch robot_pose_publisher robot_pose_publisher.launch.py use_robot_source_frame:=False",
                        "problemMatcher": [],
                        "presentation": {
                                "echo": false,
                                "focus": true,
                        }
                },
                {
                        "type": "shell",
                        "label": "build tests",
                        "command": "source /workspace/install/setup.bash; colcon build --symlink-install --packages-select testing_tools",
                        "problemMatcher": [],
                        "presentation": {
                                "echo": false,
                                "focus": false,
                                "group": "testing"
                        }
                },
                {
                        "type": "shell",
                        "label": "start nav_without_localization_with_map_buffer",
                        "command": "source /workspace/install/setup.bash; ros2 launch nav_bringup nav_without_localization_launch.py use_map_buffer:=true",
                        "problemMatcher": [],
                        "presentation": {
                                "echo": false,
                                "focus": true,
                                "group": "waypoint_testing"
                        }
                },
                {
                        "type": "shell",
                        "label": "start follow_waypoint_test",
                        "command": "source /workspace/install/setup.bash; ros2 launch testing_tools create_waypoints_launch.py num_of_waypoints:=200",
                        "problemMatcher": [],
                        "presentation": {
                                "echo": false,
                                "focus": false,
                                "group": "waypoint_testing"
                        }
                },
                {
                        "label": "new ament_cmake package",
                        "detail": "Create a new ROS cpp package from a template.",
                        "type": "shell",
                        "command": "ros2 pkg create --destination-directory src --build-type ament_cmake ${input:package}",
                        "problemMatcher": []
                },
                {
                        "label": "new ament_python package",
                        "detail": "Create a new ROS python package from a template.",
                        "type": "shell",
                        "command": "ros2 pkg create --destination-directory src --build-type ament_python ${input:package}",
                        "problemMatcher": []
                },
                {
                        "label": "import from workspace file",
                        "detail": "Use vcs to import modules specified by a workspace/rosinstall file.",
                        "type": "shell",
                        "command": "vcs import < src/ros2.repos src",
                        "problemMatcher": []
                },
                {
                        "label": "update workspace file",
                        "detail": "Use vcs to update repositories in src to workspace file.",
                        "type": "shell",
                        "command": "vcs export src > src/ros2.repos",
                        "problemMatcher": []
                },
                {
                        "label": "install dependencies",
                        "detail": "Install all dependencies specified in the workspaces package.xml files.",
                        "type": "shell",
                        "command": "sudo apt-get update && rosdep update && rosdep install --from-paths src --ignore-src -y",
                        "problemMatcher": []
                },
                {
                        "type": "cppbuild",
                        "label": "C/C++: g++ build active file",
                        "command": "/usr/bin/g++",
                        "args": [
                                "-fdiagnostics-color=always",
                                "-g",
                                "${file}",
                                "-o",
                                "${fileDirname}/${fileBasenameNoExtension}"
                        ],
                        "options": {
                                "cwd": "${fileDirname}"
                        },
                        "problemMatcher": [
                                "$gcc"
                        ],
                        "group": "build",
                        "detail": "Task generated by Debugger."
                }
        ],
        "inputs": [
                {
                        "id": "package",
                        "type": "promptString",
                        "description": "Package name"
                }
        ]
}