services:
  zed_camera_dev:
    image: ghcr.io/robast-gmbh/monorepo/zed_camera:release422
    build: 
      context: ./zed_setup
      dockerfile: Dockerfile
    runtime: nvidia
    privileged: true
    ipc: host
    pid: host
    environment:
      - ROS_DOMAIN_ID=23
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
      - NVIDIA_DRIVER_CAPABILITIES=all
      - CYCLONEDDS_URI=/DDS/cyclone_DDS_config.xml
    volumes:
      - ./start_scripts/:/start_scripts/:ro
      - ./zed_setup/:/zed_setup/:ro
      - ./healthchecks/zed_check.sh:/healthchecks/zed_check.sh:ro
      - ./DDS/:/DDS/:ro
    stop_signal: SIGINT
    restart: unless-stopped
    network_mode: "host"
    pull_policy: always
    healthcheck:
      test: [ "CMD", "/healthchecks/zed_check.sh" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    command: /bin/sh -c "/start_scripts/ping_and_wait.sh && /start_scripts/jetson_start.sh"

  hardware_nodes:
    image: ghcr.io/robast-gmbh/monorepo/hardware_nodes:release
    environment:
      - ROS_DOMAIN_ID=23
      - UID=1000
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
      - RED=${RED:-0}
      - GREEN=${GREEN:-0}
      - BLUE=${BLUE:-0}
      - BRIGHTNESS=${BRIGHTNESS:-0}
      - CYCLONEDDS_URI=/DDS/cyclone_DDS_config.xml
    devices:
      - "/dev/robast/robast_nfc:/dev/robast/robast_nfc"
    volumes:
      - ./start_scripts/:/start_scripts/:ro
      - ./DDS/:/DDS/:ro
    stop_signal: SIGINT
    restart: unless-stopped
    network_mode: "host"
    pull_policy: always
    command: /bin/sh -c "/start_scripts/ping_and_wait.sh && /start_scripts/hardware_nodes_start.sh"
  
  statemachine:
    image: ghcr.io/robast-gmbh/monorepo/statemachine:release
    environment:
      - ROS_DOMAIN_ID=23
      - UID=1000
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
      - RED=${RED:-0}
      - GREEN=${GREEN:-0}
      - BLUE=${BLUE:-0}
      - BRIGHTNESS=${BRIGHTNESS:-0}
      - CYCLONEDDS_URI=/DDS/cyclone_DDS_config.xml
    volumes:
      - ./start_scripts/:/start_scripts/:ro
      - ./healthchecks/statemachine_check.sh:/healthchecks/statemachine_check.sh:ro
      - ./DDS/:/DDS/:ro
    stop_signal: SIGINT
    restart: unless-stopped
    network_mode: "host"
    pull_policy: always
    healthcheck:
      test: [ "CMD", "/healthchecks/statemachine_check.sh" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    command: /bin/sh -c "/start_scripts/ping_and_wait.sh && /start_scripts/statemachine_start.sh"

  disinfection_module:
    image: ghcr.io/robast-gmbh/monorepo/nvidia_hardware_nodes:release
    environment:
      - ROS_DOMAIN_ID=23
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
      - CYCLONEDDS_URI=/DDS/cyclone_DDS_config.xml
    volumes:
      - ./start_scripts/:/start_scripts/:ro
      - /proc/device-tree/compatible:/proc/device-tree/compatible
      - /proc/device-tree/chosen:/proc/device-tree/chosen
      - ./DDS/:/DDS/:ro
    devices:
      - "/dev/gpiochip0:/dev/gpiochip0"
    privileged: true
    stop_signal: SIGINT
    restart: unless-stopped
    network_mode: "host"
    pull_policy: always
    command: /bin/sh -c "/start_scripts/ping_and_wait.sh && /start_scripts/disinfection_publisher_start.sh"
