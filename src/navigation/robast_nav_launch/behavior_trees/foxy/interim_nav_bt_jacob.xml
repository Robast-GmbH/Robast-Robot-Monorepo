<?xml version="1.0"?>
<root main_tree_to_execute="MainTree">
    <!-- ////////// -->
    <BehaviorTree ID="CheckForInterimGoalsSubtree">
        <Decorator ID="RateController" hz="1.0">
            <IfThenElse>
                <ReactiveFallback>
                    <SubTree ID="GoalUpdateSubtree" __shared_blackboard="true"/>
                    <Condition ID="StateCheck" variable_name="new_goal_pending"/>
                    <IfThenElse>
                        <Condition ID="StateCheck" variable_name="computed_outer_door_bell"/>
                        <AlwaysFailure/>
                        <Inverter>
                            <Condition ID="StateCheck" variable_name="accomplished_outer_door_bell"/>
                        </Inverter>
                    </IfThenElse>
                </ReactiveFallback>
                <IfThenElse>
                    <Action ID="ComputePathToPose" goal="{goal}" path="{path_tmp}" planner_id="GridBased"/>
                    <Sequence>
                        <SetBlackboard output_key="new_goal_pending" value="false"/>
                        <SetBlackboard output_key="accomplished_final_goal" value="false"/>
                        <IfThenElse>
                            <Action ID="InterimGoalCompAction" interim_goal="{outer_door_bell_goal}" interim_poses="{outer_door_bell_poses}" is_path_reversed="false" path="{path_tmp}" search_radius="8.0" waypoint_index="{wp_id_outer_door_bell}"/>
                            <Control ID="PipelineSequence">
                                <SetBlackboard output_key="computed_outer_door_bell" value="true"/>
                                <SetBlackboard output_key="accomplished_outer_door_bell" value="false"/>
                            </Control>
                            <SetBlackboard output_key="accomplished_outer_door_bell" value="true"/>
                        </IfThenElse>
                    </Sequence>
                    <AlwaysFailure/>
                </IfThenElse>
                <AlwaysSuccess/>
            </IfThenElse>
        </Decorator>
    </BehaviorTree>
    <!-- ////////// -->
    <BehaviorTree ID="ComputePathSubtree">
        <Decorator ID="RateController" hz="1.0">
            <Control ID="RecoveryNode" name="ComputePathToPose" number_of_retries="1">
                <IfThenElse>
                    <Condition ID="StateCheck" variable_name="accomplished_outer_door_bell"/>
                    <Action ID="ComputePathToPose" goal="{goal}" path="{path}" planner_id="GridBased"/>
                    <Action ID="ComputePathToPose" goal="{outer_door_bell_goal}" path="{path_outer_door_bell}" planner_id="GridBased"/>
                </IfThenElse>
                <ReactiveFallback name="ComputePathToPoseRecoveryFallback">
                    <SubTree ID="GoalUpdateSubtree" __shared_blackboard="true"/>
                    <Action ID="ClearEntireCostmap" name="ClearGlobalCostmap-Context" service_name="global_costmap/clear_entirely_global_costmap"/>
                </ReactiveFallback>
            </Control>
        </Decorator>
    </BehaviorTree>
    <!-- ////////// -->
    <BehaviorTree ID="FinalCheckSubtree">
        <ReactiveSequence>
            <Condition ID="StateCheck" variable_name="accomplished_outer_door_bell"/>
            <Condition ID="StateCheck" variable_name="accomplished_final_goal"/>
        </ReactiveSequence>
    </BehaviorTree>
    <!-- ////////// -->
    <BehaviorTree ID="FollowPathSubtree">
        <Control ID="RecoveryNode" name="FollowPath" number_of_retries="2">
            <WhileDoElse>
                <Condition ID="StateCheck" variable_name="new_goal_pending"/>
                <AlwaysFailure/>
                <IfThenElse>
                    <Condition ID="StateCheck" variable_name="computed_outer_door_bell"/>
                    <Sequence>
                        <ReactiveFallback>
                            <Condition ID="StateCheck" variable_name="accomplished_outer_door_bell"/>
                            <Action ID="FollowPath" controller_id="FollowPath" path="{path_outer_door_bell}"/>
                        </ReactiveFallback>
                        <SetBlackboard output_key="accomplished_outer_door_bell" value="true"/>
                        <Action ID="FollowPath" controller_id="FollowPath" path="{path}"/>
                        <SetBlackboard output_key="accomplished_final_goal" value="true"/>
                    </Sequence>
                    <Action ID="FollowPath" controller_id="FollowPath" path="{path}"/>
                </IfThenElse>
            </WhileDoElse>
            <ReactiveFallback name="FollowPathRecoveryFallback">
                <SubTree ID="GoalUpdateSubtree" __shared_blackboard="true"/>
                <Action ID="ClearEntireCostmap" name="ClearLocalCostmap-Context" service_name="local_costmap/clear_entirely_local_costmap"/>
            </ReactiveFallback>
        </Control>
    </BehaviorTree>
    <!-- ////////// -->
    <BehaviorTree ID="GoalUpdateSubtree">
        <IfThenElse>
            <Condition ID="RobastGoalUpdated"/>
            <SetBlackboard output_key="new_goal_pending" value="true"/>
            <AlwaysFailure/>
        </IfThenElse>
    </BehaviorTree>
    <!-- ////////// -->
    <BehaviorTree ID="InitializationSubtree">
        <SequenceStar>
            <Action ID="ImportYamlPosesAction" poses="{outer_door_bell_poses}" yaml_name="outer_door_bells.yaml"/>
            <Action ID="ImportYamlPosesAction" poses="{inner_door_bell_poses}" yaml_name="inner_door_bells.yaml"/>
            <SetBlackboard output_key="computed_outer_door_bell" value="false"/>
            <SetBlackboard output_key="accomplished_outer_door_bell" value="false"/>
            <SetBlackboard output_key="accomplished_final_goal" value="false"/>
        </SequenceStar>
    </BehaviorTree>
    <!-- ////////// -->
    <BehaviorTree ID="MainTree">
        <SequenceStar>
            <SubTree ID="InitializationSubtree" __shared_blackboard="true"/>
            <Control ID="RecoveryNode" name="NavigateRecovery" number_of_retries="6">
                <Control ID="PipelineSequence" name="NavigateWithReplanning">
                    <SubTree ID="CheckForInterimGoalsSubtree" __shared_blackboard="true"/>
                    <SubTree ID="ComputePathSubtree" __shared_blackboard="true"/>
                    <SubTree ID="FollowPathSubtree" __shared_blackboard="true"/>
                    <SubTree ID="FinalCheckSubtree" __shared_blackboard="true"/>
                </Control>
                <SubTree ID="NavRecoverySubtree" __shared_blackboard="true"/>
            </Control>
        </SequenceStar>
    </BehaviorTree>
    <!-- ////////// -->
    <BehaviorTree ID="NavRecoverySubtree">
        <ReactiveFallback name="RecoveryFallback">
            <SubTree ID="GoalUpdateSubtree" __shared_blackboard="true"/>
            <Control ID="RoundRobin" name="RecoveryActions">
                <Sequence name="ClearingActions">
                    <Action ID="ClearEntireCostmap" name="ClearLocalCostmap-Subtree" service_name="local_costmap/clear_entirely_local_costmap"/>
                    <Action ID="ClearEntireCostmap" name="ClearGlobalCostmap-Subtree" service_name="global_costmap/clear_entirely_global_costmap"/>
                </Sequence>
                <Action ID="Spin" spin_dist="1.57"/>
                <Action ID="Wait" wait_duration="5"/>
            </Control>
        </ReactiveFallback>
    </BehaviorTree>
    <!-- ////////// -->
    <TreeNodesModel>
        <Action ID="BackUp">
            <input_port name="backup_dist">Distance to backup</input_port>
            <input_port name="backup_speed">Speed at which to backup</input_port>
        </Action>
        <SubTree ID="CheckForInterimGoalsSubtree">
            <inout_port name="__shared_blackboard"/>
        </SubTree>
        <Action ID="ClearEntireCostmap">
            <inout_port name="service_name"/>
        </Action>
        <SubTree ID="ComputePathSubtree">
            <inout_port name="__shared_blackboard"/>
        </SubTree>
        <Action ID="ComputePathToPose">
            <inout_port name="goal"/>
            <inout_port name="path"/>
            <inout_port name="planner_id"/>
        </Action>
        <Decorator ID="DistanceController">
            <input_port name="distance">Distance</input_port>
        </Decorator>
        <SubTree ID="FinalCheckSubtree">
            <inout_port name="__shared_blackboard"/>
        </SubTree>
        <Action ID="FollowPath">
            <inout_port name="controller_id"/>
            <inout_port name="path"/>
        </Action>
        <SubTree ID="FollowPathSubtree">
            <inout_port name="__shared_blackboard"/>
        </SubTree>
        <Condition ID="GoalReached">
            <input_port name="goal">Destination</input_port>
        </Condition>
        <SubTree ID="GoalUpdateSubtree">
            <inout_port name="__shared_blackboard"/>
        </SubTree>
        <Condition ID="GoalUpdated"/>
        <Decorator ID="GoalUpdater">
            <input_port name="input_goal">Original goal in</input_port>
            <output_port name="output_goal">Output goal set by subscription</output_port>
        </Decorator>
        <Action ID="ImportYamlPosesAction">
            <inout_port name="poses"/>
            <inout_port name="yaml_name"/>
        </Action>
        <SubTree ID="InitializationSubtree">
            <inout_port name="__shared_blackboard"/>
        </SubTree>
        <Action ID="InterimGoalCompAction">
            <input_port name="path">Path to the goal</input_port>
            <input_port name="is_path_reversed">Is the supplied path reversed?</input_port>
            <input_port name="interim_poses">List of possible interim poses</input_port>
            <input_port name="search_radius">Radius to search for interim_poses</input_port>
            <output_port name="interim_goal">Path created by ComputePathToPose node</output_port>
            <output_port name="waypoint_index">Waypoint index of the path-waypoints that was closest to the chosen interim pose</output_port>
        </Action>
        <Condition ID="IsStuck"/>
        <SubTree ID="NavRecoverySubtree">
            <inout_port name="__shared_blackboard"/>
        </SubTree>
        <Action ID="NavigateToPose">
            <input_port name="orientation">Orientation</input_port>
            <input_port name="position">Position</input_port>
        </Action>
        <Control ID="PipelineSequence"/>
        <Action ID="RandomCrawl"/>
        <Decorator ID="RateController">
            <inout_port name="hz"/>
        </Decorator>
        <Control ID="RecoveryNode">
            <inout_port name="number_of_retries"/>
        </Control>
        <Decorator ID="RevertPath">
            <input_port name="path">Original path in</input_port>
            <output_port name="reverted_path">Output reverted path</output_port>
        </Decorator>
        <Condition ID="RobastGoalUpdated"/>
        <Control ID="RoundRobin"/>
        <Decorator ID="SpeedController">
            <input_port name="filter_duration">Duration (secs) for velocity smoothing filter</input_port>
            <input_port name="max_rate">Maximum rate</input_port>
            <input_port name="max_speed">Maximum speed</input_port>
            <input_port name="min_rate">Minimum rate</input_port>
            <input_port name="min_speed">Minimum speed</input_port>
        </Decorator>
        <Action ID="Spin">
            <inout_port name="spin_dist"/>
        </Action>
        <Condition ID="StateCheck">
            <inout_port name="variable_name"/>
        </Condition>
        <Condition ID="TransformAvailable">
            <input_port name="child">Child frame for transform</input_port>
            <input_port name="parent">Parent frame for transform</input_port>
        </Condition>
        <Condition ID="VariableUpdated">
            <input_port name="variable_name">name of the int in the Blackboard that should be checked</input_port>
        </Condition>
        <Action ID="Wait">
            <inout_port name="wait_duration"/>
        </Action>
    </TreeNodesModel>
    <!-- ////////// -->
</root>

