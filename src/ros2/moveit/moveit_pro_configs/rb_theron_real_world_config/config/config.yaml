#
#  This contains information for a unique instance of a robot.
#

# Name of the package to specialize
based_on_package: "rb_theron_config"

# Enable simulation time so nodes are synced with the Gazebo block.
ros_global_params:
  use_sim_time: False

hardware:
  # This is the only option for this site_config
  simulated: False

  # Gazebo starts its own controller manager through the ros2_control plugin, so set this to False
  launch_control_node: False

  # If the MoveIt Studio Agent should launch the robot state publisher
  # This should be false if you are launching the robot state publisher as part of drivers.
  launch_robot_state_publisher: False

  # If the MoveIt Studio Agent should launch cameras when simulated.
  launch_cameras_when_simulated: False

  # The robot's IP address
  ip: "0.0.0.0"

  # The following launch file is started when hardware.simulated is True
  # This is run when running robot.app
  robot_driver_persist_launch_file:
    package: "rb_theron_real_world_config"
    path: "launch/hardware_launch.py"

  # Override other parameters from the base config package, including
  # the camera configuration and the robot description model.
  camera_config_file:
    package: "rb_theron_real_world_config"
    path: "config/cameras.yaml"
  robot_description:
    urdf:
      package: "rb_theron_description"
      path: "robots/rb_theron.urdf.xacro"
    srdf:
      package: "moveit_door_opening_mechanism_config"
      path: "config/rb_theron_real_world.srdf"
    # Specify any additional parameters required for the URDF.
    # Many of these are specific to the UR descriptions packages, and can be customized as needed.
    # [Optional]
    urdf_params:
      - ros_distro: "humble"
      - prefix: "robot/"
      - ros2_control_hardware_type: "dryve_d1"
      - position_joint_type: "prismatic"
      - model_door_opening_mechanism: "true"
      - model_module_cage: "false"
      - model_sensors: "false"
      - ros2_control_hardware_type_positon_joint: "real_life"

# Override MoveIt parameters
moveit_params:
  sensors_3d:
    package: "moveit_door_opening_mechanism_config"
    path: "config/sensors_3d_real_world.yaml"
  moveit_simple_controller_manager:
    package: "moveit_door_opening_mechanism_config"
    path: "config/moveit_simple_controller_manager_real_world.yaml"
  sensors_3d:
    package: "moveit_door_opening_mechanism_config"
    path: "config/sensors_3d_real_world.yaml"
  joint_limits:
    package: "moveit_door_opening_mechanism_config"
    path: "config/joint_limits_real_world.yaml"

octomap_manager:
#   # Input point cloud topic name. The *output* point cloud topic published by
#   # the Octomap manager node is defined in the respective sensors_3d.yaml.
  input_point_cloud_topic: "/stereo/points"

# This configures what controllers gets run at startup
ros2_control:
  controllers_active_at_startup: []

  controllers_inactive_at_startup: []

  controllers_not_managed:
    - "joint_state_broadcaster"
    - "diff_drive_base_controller"
    - "drawer_joint_trajectory_controller"
    - "mobile_base_controller_cmd_vel"
    - "streaming_controller"
    - "joint_trajectory_controller"

objectives:
  waypoints_file:
    package_name: "rb_theron_real_world_config"
    relative_path: "waypoints/waypoints.yaml"

  objective_library_paths:
    # You must use a unique key for each package.
    # The base_config uses "core"
    real_life_objectives:
      package_name: "rb_theron_real_world_config"
      relative_path: "objectives"