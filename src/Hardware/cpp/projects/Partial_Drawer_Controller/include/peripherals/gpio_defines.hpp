#ifndef PARTIAL_DRAWER_CONTROLLER_GPIO_DEFINES_HPP
#define PARTIAL_DRAWER_CONTROLLER_GPIO_DEFINES_HPP

#include <PCA95x5.h>

#include "gpio/gpio_info.hpp"

namespace partial_drawer_controller
{

  using port_info = std::tuple<uint8_t, PCA95x5::Port::Port>;

  /*********************************************************************************************************
  Slave address defines
 *********************************************************************************************************/

#define SLAVE_ADDRESS_PORT_EXPANDER_1 0x20
#define SLAVE_ADDRESS_PORT_EXPANDER_2 0x21
#define SLAVE_ADDRESS_PORT_EXPANDER_3 0x22

#define SLAVE_ADDRESS_LP5030RJVR           0x33   // individual address, configured by hardware pins
#define SLAVE_ADDRESS_LP5030RJVR_BROADCAST 0x1C   // broadcast to all LP5030RJVRs (up to 4 devices on same I2C bus)

  /*********************************************************************************************************
  These defines are only mapping ID's used within this class
  *********************************************************************************************************/
#define STEPPER_1_ENN_TMC2209_PIN_ID   0
#define STEPPER_1_STDBY_TMC2209_PIN_ID 1
#define STEPPER_1_SPREAD_PIN_ID        2
#define STEPPER_1_DIR_PIN_ID           3
#define STEPPER_1_DIAG_PIN_ID          4
#define STEPPER_1_INDEX_PIN_ID         5
#define STEPPER_1_STEP_PIN_ID          6
#define STEPPER_1_VREF_PIN_ID          7
#define STEPPER_1_ENCODER_A_PIN_ID     8
#define STEPPER_1_ENCODER_B_PIN_ID     9
#define STEPPER_1_ENCODER_N_PIN_ID     10

#define CAN_EN_HIGH_SPEED_MODE_PIN_ID 20
#define ENABLE_ONBOARD_LED_VDD_PIN_ID 21

#define LOCK_1_OPEN_CONTROL_PIN_ID 30
#define LOCK_2_OPEN_CONTROL_PIN_ID 31
#define LOCK_3_OPEN_CONTROL_PIN_ID 32
#define LOCK_4_OPEN_CONTROL_PIN_ID 33
#define LOCK_5_OPEN_CONTROL_PIN_ID 34
#define LOCK_6_OPEN_CONTROL_PIN_ID 35
#define LOCK_7_OPEN_CONTROL_PIN_ID 36
#define LOCK_8_OPEN_CONTROL_PIN_ID 37

#define LOCK_1_CLOSE_CONTROL_PIN_ID 40
#define LOCK_2_CLOSE_CONTROL_PIN_ID 41
#define LOCK_3_CLOSE_CONTROL_PIN_ID 42
#define LOCK_4_CLOSE_CONTROL_PIN_ID 43
#define LOCK_5_CLOSE_CONTROL_PIN_ID 44
#define LOCK_6_CLOSE_CONTROL_PIN_ID 45
#define LOCK_7_CLOSE_CONTROL_PIN_ID 46
#define LOCK_8_CLOSE_CONTROL_PIN_ID 47

#define SENSE_INPUT_LID_1_CLOSED_PIN_ID 50
#define SENSE_INPUT_LID_2_CLOSED_PIN_ID 51
#define SENSE_INPUT_LID_3_CLOSED_PIN_ID 52
#define SENSE_INPUT_LID_4_CLOSED_PIN_ID 53
#define SENSE_INPUT_LID_5_CLOSED_PIN_ID 54
#define SENSE_INPUT_LID_6_CLOSED_PIN_ID 55
#define SENSE_INPUT_LID_7_CLOSED_PIN_ID 56
#define SENSE_INPUT_LID_8_CLOSED_PIN_ID 57

#define SENSE_INPUT_DRAWER_1_CLOSED_PIN_ID 60

#define PE_2_IO0_0_PIN_ID 70
#define PE_2_IO0_3_PIN_ID 71
#define PE_2_IO0_4_PIN_ID 72
#define PE_2_IO1_1_PIN_ID 73
#define PE_2_IO1_6_PIN_ID 74

#define PE_0_NINTERRUPT_PIN_ID 80
#define PE_1_NINTERRUPT_PIN_ID 81
#define PE_2_NINTERRUPT_PIN_ID 82

  const std::unordered_map<uint8_t, drawer_controller::GpioInfo> pin_mapping_id_to_gpio_info = {
    {STEPPER_1_ENCODER_B_PIN_ID, drawer_controller::GpioInfo{GPIO_NUM_2, IS_INPUT}},
    {STEPPER_1_VREF_PIN_ID, drawer_controller::GpioInfo{GPIO_NUM_25, IS_OUTPUT}},
    {STEPPER_1_ENCODER_A_PIN_ID, drawer_controller::GpioInfo{GPIO_NUM_26, IS_INPUT}},
    {PE_1_NINTERRUPT_PIN_ID, drawer_controller::GpioInfo{GPIO_NUM_34, IS_INPUT}},
    {SENSE_INPUT_LID_8_CLOSED_PIN_ID, drawer_controller::GpioInfo{GPIO_NUM_35, IS_INPUT}},
    {PE_0_NINTERRUPT_PIN_ID, drawer_controller::GpioInfo{GPIO_NUM_36, IS_INPUT}},
    {PE_2_NINTERRUPT_PIN_ID, drawer_controller::GpioInfo{GPIO_NUM_39, IS_INPUT}}};

  const std::unordered_map<uint8_t, std::shared_ptr<PCA9535>> port_expanders = {
    {SLAVE_ADDRESS_PORT_EXPANDER_1, std::make_shared<PCA9535>()},
    {SLAVE_ADDRESS_PORT_EXPANDER_2, std::make_shared<PCA9535>()},
    {SLAVE_ADDRESS_PORT_EXPANDER_3, std::make_shared<PCA9535>()},
  };

  const std::unordered_map<uint8_t, port_info> pin_mapping_id_to_port = {
    {STEPPER_1_STDBY_TMC2209_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_1, PCA95x5::Port::P00}},
    {SENSE_INPUT_LID_3_CLOSED_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_1, PCA95x5::Port::P01}},
    {LOCK_2_OPEN_CONTROL_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_1, PCA95x5::Port::P02}},
    {LOCK_2_CLOSE_CONTROL_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_1, PCA95x5::Port::P03}},
    {SENSE_INPUT_LID_2_CLOSED_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_1, PCA95x5::Port::P04}},
    {LOCK_1_OPEN_CONTROL_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_1, PCA95x5::Port::P05}},
    {LOCK_1_CLOSE_CONTROL_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_1, PCA95x5::Port::P06}},
    {SENSE_INPUT_LID_1_CLOSED_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_1, PCA95x5::Port::P07}},
    {STEPPER_1_ENN_TMC2209_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_1, PCA95x5::Port::P10}},
    {LOCK_3_OPEN_CONTROL_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_1, PCA95x5::Port::P11}},
    {LOCK_3_CLOSE_CONTROL_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_1, PCA95x5::Port::P12}},
    {STEPPER_1_DIR_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_1, PCA95x5::Port::P13}},
    {STEPPER_1_SPREAD_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_1, PCA95x5::Port::P14}},
    {STEPPER_1_DIAG_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_1, PCA95x5::Port::P15}},
    {STEPPER_1_STEP_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_1, PCA95x5::Port::P16}},
    {STEPPER_1_INDEX_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_1, PCA95x5::Port::P17}},
    {LOCK_8_CLOSE_CONTROL_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_2, PCA95x5::Port::P06}},
    {LOCK_8_OPEN_CONTROL_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_2, PCA95x5::Port::P07}},
    {CAN_EN_HIGH_SPEED_MODE_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_2, PCA95x5::Port::P10}},
    {LOCK_7_CLOSE_CONTROL_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_2, PCA95x5::Port::P11}},
    {LOCK_7_OPEN_CONTROL_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_2, PCA95x5::Port::P12}},
    {SENSE_INPUT_LID_7_CLOSED_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_2, PCA95x5::Port::P15}},
    {LOCK_6_OPEN_CONTROL_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_2, PCA95x5::Port::P16}},
    {LOCK_6_CLOSE_CONTROL_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_2, PCA95x5::Port::P17}},
    {PE_2_IO0_0_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_3, PCA95x5::Port::P00}},
    {SENSE_INPUT_DRAWER_1_CLOSED_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_3, PCA95x5::Port::P01}},
    {LOCK_4_CLOSE_CONTROL_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_3, PCA95x5::Port::P02}},
    {PE_2_IO0_3_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_3, PCA95x5::Port::P03}},
    {PE_2_IO0_4_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_3, PCA95x5::Port::P04}},
    {SENSE_INPUT_LID_5_CLOSED_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_3, PCA95x5::Port::P05}},
    {LOCK_4_OPEN_CONTROL_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_3, PCA95x5::Port::P06}},
    {ENABLE_ONBOARD_LED_VDD_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_3, PCA95x5::Port::P07}},
    {SENSE_INPUT_LID_6_CLOSED_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_3, PCA95x5::Port::P10}},
    {PE_2_IO1_1_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_3, PCA95x5::Port::P11}},
    {STEPPER_1_ENCODER_N_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_3, PCA95x5::Port::P12}},
    {SENSE_INPUT_LID_4_CLOSED_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_3, PCA95x5::Port::P14}},
    {LOCK_5_CLOSE_CONTROL_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_3, PCA95x5::Port::P15}},
    {PE_2_IO1_6_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_3, PCA95x5::Port::P16}},
    {LOCK_5_OPEN_CONTROL_PIN_ID, {SLAVE_ADDRESS_PORT_EXPANDER_3, PCA95x5::Port::P17}},
  };

}   // namespace partial_drawer_controller

#endif   // PARTIAL_DRAWER_CONTROLLER_GPIO_DEFINES_HPP