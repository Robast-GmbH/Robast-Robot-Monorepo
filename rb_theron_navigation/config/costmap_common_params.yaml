publish_frequency: 2.0
transform_tolerance: 0.5

footprint: [[0.35, 0.28], [-0.35, 0.28], [-0.35, -0.28], [0.35, -0.28]]

inflation_layer:
  inflation_radius: 0.1
  cost_scaling_factor: 0.2
  transform_tolerance: 0.5

obstacle_layer:
  obstacle_range: 3.5
  raytrace_range: 5.5
  transform_tolerance: 0.5
  observation_sources: front_laser
  front_laser:
    sensor_frame: robot_front_laser_link
    data_type: LaserScan
    topic: front_laser/filtered_scan
    marking: true
    clearing: true
    observation_persistence: 0.0

rgbd_laserscan_obstacle_layer:
  obstacle_range: 3.5
  raytrace_range: 5.5
  transform_tolerance: 0.5
  observation_sources: front_rgbd
  front_rgbd:
    sensor_frame: robot_front_rgbd_camera_link
    data_type: LaserScan
    topic: front_rgbd_camera/point_cloud_scan_filtered
    marking: true
    clearing: true
    observation_persistence: 0.0

rgbd_obstacle_layer:
  enabled:               false
  voxel_decay:           2     #seconds if linear, e^n if exponential
  decay_model:           0      #0=linear, 1=exponential, -1=persistent
  voxel_size:            0.05   #meters
  track_unknown_space:   true   #default space is unknown
  observation_persistence: 0.0  #seconds
  max_obstacle_height:   2.0    #meters
  unknown_threshold:     15     #voxel height
  mark_threshold:        0      #voxel height
  update_footprint_enabled: true
  combination_method:    1      #1=max, 0=override
  obstacle_range:        2.5    #meters
  origin_z:              0.0    #meters
  publish_voxel_map:     true   # default off
  transform_tolerance:   0.5    # seconds
  mapping_mode:          false  # default off, saves map not for navigation
  map_save_duration:     60     #default 60s, how often to autosave
  observation_sources:   rgbd1_clear rgbd1_mark
  rgbd1_mark:
    data_type: PointCloud2
    topic: /robot/front_rgbd_camera/depth/points/nope
    marking: true
    clearing: false
    min_obstacle_height: -0.1     #default 0, meters
    max_obstacle_height: 2.0     #defaule 3, meters
    expected_update_rate: 0.0    #default 0, if not updating at this rate at least, remove from buffer
    observation_persistence: 0.0 #default 0, use all measurements taken during now-value, 0=latest
    inf_is_valid: false          #default false, for laser scans
    clear_after_reading: true    #default false, clear the buffer after the layer gets readings from it
    voxel_filter: true           #default off, apply voxel filter to sensor, recommend on
    voxel_min_points: 0          #default 0, minimum points per voxel for voxel filter
  rgbd1_clear:
    enabled: false                #default true, can be toggled on/off with associated service call
    data_type: PointCloud2
    topic: /robot/front_rgbd_camera/depth/points/nope
    marking: false
    clearing: true
    min_z: -0.3                   #default 0, meters
    max_z: 2.5                   #default 10, meters
    vertical_fov_angle: 0.864      #default 0.7, radians
    horizontal_fov_angle: 1.04   #default 1.04, radians
    decay_acceleration: 1.       #default 0, 1/s^2. If laser scanner MUST be 0
    model_type: 0                #default 0 (depth camera). Use 1 for 3D Lidar


3d_lidar_obstacle_layer:
  enabled:                  true
  voxel_decay:              5    # seconds if linear, e^n if exponential
  decay_model:              0     # 0=linear, 1=exponential, -1=persistent
  voxel_size:               0.02  # meters
  track_unknown_space:      true  # default space is known
  max_obstacle_height:      2.5   # meters
  unknown_threshold:        15    # voxel height
  mark_threshold:           0     # voxel height
  update_footprint_enabled: true
  combination_method:       1     # 1=max, 0=override
  obstacle_range:           20.0   # meters
  origin_z:                 0.0   # meters
  publish_voxel_map:        true # default off
  transform_tolerance:      0.5   # seconds
  mapping_mode:             false # default off, saves map not for navigation
  map_save_duration:        60    # default 60s, how often to autosave
  observation_sources:      lidar_3d_mark lidar_3d_clear
  lidar_3d_mark:
    data_type: PointCloud2
    topic: /robot/lidar_3d/points
    marking: true
    clearing: false
    min_obstacle_height: 0.15    # default 0, meters
    max_obstacle_height: 1.97     # default 3, meters
    expected_update_rate: 0.0    # default 0, if not updating at this rate at least, remove from buffer
    observation_persistence: 0.0 # default 0, use all measurements taken during now-value, 0=latest
    inf_is_valid: false          # default false, for laser scans
    voxel_filter: true          # default off, apply voxel filter to sensor, recommend on
    voxel_min_points: 0          # default 0, minimum points per voxel for voxel filter
    clear_after_reading: false    # default false, clear the buffer after the layer gets readings from it
  lidar_3d_clear:
    enabled: false                #default true, can be toggled on/off with associated service call
    data_type: PointCloud2
    topic: /robot/lidar_3d/points
    marking: false
    clearing: true
    max_z: 10.0                  # default 0, meters 8.0
    min_z: -2.0                 # default 10, meters 1.0
    vertical_fov_angle: 0.523   # default 0.7, radians. For 3D lidars it's the symmetric FOV about the planar axis.
    vertical_fov_padding: 0.05    # 3D Lidar only. Default 0, in meters
    horizontal_fov_angle: 6.29  # 3D lidar scanners like the VLP16 have 360 deg horizontal FOV.
    decay_acceleration: 5.0     # default 0, 1/s^2.
    model_type: 1               # default 0, model type for frustum. 0=depth camera, 1=3d lidar like VLP16 or similar
