{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        // Build tasks
        {
            "label": "build",
            "detail": "Build workspace (default)",
            "type": "shell",
            "command": "colcon build --merge-install --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        // Test tasks
        {
            "label": "test",
            "detail": "Run all unit tests and show results.",
            "type": "shell",
            "command": "colcon test --merge-install; colcon test-result",
            "group": {
                "kind": "test",
                "isDefault": true
            }
        },
        // Clean-ros
        {
            "label": "clean-ros",
            "detail": "Clean ros colcon build",
            "type": "shell",
            "command": "colcon build --cmake-target clean",
            "problemMatcher": "$gcc"
        },
        // Clean
        {
            "label": "clean",
            "detail": "Purge and clean ros colcon build",
            "dependsOn": ["purge", "clean-ros"],
            "dependsOrder": "sequence",
            "problemMatcher": []
        },
        // Build Ros-Theron 
        {
            "label": "build-ros-theron",
            "detail": "Symlink Build for Ros-Theron. Makes sure packages are build in the right order.",
            "type": "shell",
            "command": "colcon build --packages-select robot_localization --symlink-install --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' -Wall -Wextra -Wpedantic; source install/setup.bash; colcon build --symlink-install --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' -Wall -Wextra -Wpedantic --packages-skip aws_hospital_world",
            "problemMatcher": [],
        },
        // Clean build Ros-Theron 
        {
            "label": "clean-build-ros-theron",
            "detail": "Purges and symlink builds for Ros-Theron. Makes sure packages are build in the right order.",
            "dependsOn": ["purge", "build-ros-theron"],
            "dependsOrder": "sequence",
            "problemMatcher": []
        },
        // Clean build Ros-Theron for native Linux
        {
            "label": "native-linux-clean-build-ros-theron",
            "detail": "Purges and symlink builds for Ros-Theron. Makes sure packages are build in the right order.",
            "dependsOn": ["purge"],
            "dependsOrder": "sequence",
            "type": "shell",
            "command": "source ~/../../opt/ros/galactic/setup.bash; colcon build --packages-select robot_localization --symlink-install; source install/setup.bash; colcon build --symlink-install --packages-skip aws_hospital_world",
            "problemMatcher": []
        },
        // Purge
        {
            "label": "purge",
            "detail": "Purge workspace by deleting all generated files.",
            "type": "shell",
            "command": "rm -fr build install log; py3clean .",
            "problemMatcher": []
        },
        //default start
        {
            "label": "defaullt_startup",
            "detail": "Starts TipluWorld, Nav, slam",
            "dependsOn": ["start map_server", "start slam_toolbox", "start nav_without_localization"],
            "problemMatcher": [],
        },
        //default start
        {
            "label": "defaullt_startup_amcl",
            "detail": "Starts TipluWorld, Nav, slam",
            "dependsOn": ["start map_server", "start amcl", "start nav_without_localization", "start rviz_amcl"],
            "problemMatcher": [],
        },
        {
            "type": "shell",
            "label": "start map_server",
            "command": "source /workspaces/Robast_RosTheron/shell_setup.sh; ros2 launch map_server TipluWorld_no_client.launch.py",
            "problemMatcher": [],
            "presentation": {
                "echo": false,  // silence "Executing task ..."
                "focus": true,
                "group": "default_start",  
                "panel": "dedicated"
            }
        },
        {
            "type": "shell",
            "label": "start rviz",
            "command": "source /workspaces/Robast_RosTheron/shell_setup.sh; ros2 launch navigation rviz_launch.py",
            "problemMatcher": [],
            "presentation": {
                "echo": false,  // silence "Executing task ..."
                "focus": true,
                "group": "default_start",  
                "panel": "dedicated"
            }
        },
        {
            "type": "shell",
            "label": "start rviz_amcl",
            "command": "source /workspaces/Robast_RosTheron/shell_setup.sh; ros2 launch navigation rviz_amcl_launch.py",
            "problemMatcher": [],
            "presentation": {
                "echo": false,  // silence "Executing task ..."
                "focus": true,
                "group": "default_start",  
                "panel": "dedicated"
            }
        },
        {
            "type": "shell",
            "label": "start nav_without_localization",
            "command": "source /workspaces/Robast_RosTheron/shell_setup.sh; ros2 launch navigation nav_without_localization_launch.py",  
            "problemMatcher": [],
            "presentation": {
                "echo": false,  // silence "Executing task ..."
                "focus": true,
                "group": "default_start",  
                "panel": "dedicated"
            }
        },
        {
            "type": "shell",
            "label": "start slam_toolbox",
            "command": "source /workspaces/Robast_RosTheron/shell_setup.sh; ros2 launch navigation slam_toolbox_launch.py",  
            "problemMatcher": [],
            "presentation": {
                "echo": false,  // silence "Executing task ..."
                "focus": true,
                "group": "default_start",  
                "panel": "dedicated"
            }
        },
        {
            "type": "shell",
            "label": "start amcl",
            "command": "source /workspaces/Robast_RosTheron/shell_setup.sh; ros2 launch navigation amcl_launch.py; ros2 launch navigation nav_without_localization_launch.py",  
            "problemMatcher": [],
            "presentation": {
                "echo": false,  // silence "Executing task ..."
                "focus": true,
                "group": "default_start",  
                "panel": "dedicated"
            }
        },
        //waypoint test
        {
            "label": "waypoint_test",
            "detail": "Starts TipluWorld, Nav, slam, waypoint test",
            "dependsOrder": "sequence",
            "dependsOn": ["build tests", "waypoint_test_follow"],
            "problemMatcher": [],
        },
        {
            "label": "waypoint_amcl_test",
            "detail": "Starts TipluWorld, Nav, slam, waypoint test",
            "dependsOrder": "sequence",
            "dependsOn": ["build tests", "waypoint_test_follow_amcl"],
            "problemMatcher": [],
        },
        {
            "type": "shell",
            "label": "build tests",
            "command": "source /workspaces/Robast_RosTheron/shell_setup.sh; colcon build --symlink-install --packages-select testing_tools",  
            "problemMatcher": [],
            "presentation": {
                "echo": false,  // silence "Executing task ..."
                "focus": false,
                "group": "testing",  
            }
        },
        {
            "label": "waypoint_test_follow_amcl",
            "detail": "Starts TipluWorld, Nav, slam, waypoint test, rviz",
            "dependsOn": ["start map_server", "start amcl", "start nav_without_localization", "start follow_waypoint_test", "start rviz_amcl"],
            "problemMatcher": [],
        },
        {
            "label": "waypoint_test_follow",
            "detail": "Starts TipluWorld, Nav, slam, waypoint test, start rviz",
            "dependsOn": ["start map_server", "start slam_toolbox", "start nav_without_localization_with_map_buffer", "start follow_waypoint_test", "start rviz"],
            "problemMatcher": [],
        },
        {
            "type": "shell",
            "label": "start nav_without_localization_with_map_buffer",
            "command": "source /workspaces/Robast_RosTheron/shell_setup.sh; ros2 launch navigation nav_without_localization_with_map_buffer_launch.py",  
            "problemMatcher": [],
            "presentation": {
                "echo": false,  // silence "Executing task ..."
                "focus": true,
                "group": "waypoint_testing",  
                "panel": "dedicated"
            }
        },
        {
            "type": "shell",
            "label": "start follow_waypoint_test",
            "command": "source /workspaces/Robast_RosTheron/shell_setup.sh; ros2 launch testing_tools create_waypoints_launch.py num_of_waypoints:=200",  
            "problemMatcher": [],
            "presentation": {
                "echo": false,  // silence "Executing task ..."
                "focus": false,
                "group": "waypoint_testing",  
                "panel": "dedicated"
            }
        },
        // Linting and static code analysis tasks
        {
            "label": "fix",
            "detail": "Reformat files with uncrustify.",
            "type": "shell",
            "command": "ament_uncrustify --reformat src/",
            "problemMatcher": []
        },
        {
            "label": "uncrustify",
            "detail": "Lint files with uncrustify.",
            "type": "shell",
            "command": "ament_uncrustify src/",
            "presentation": {
                "panel": "dedicated",
                "reveal": "silent",
                "clear": true
            },
            "problemMatcher": [
                {
                    "owner": "uncrustify",
                    "source": " uncrustify",
                    "fileLocation": "relative",
                    "pattern": [
                    /// just the file name message
                        {
                            "regexp": "^(.*)'(.*)':",
                            "kind": "file",
                            "file": 2,
                            "message": 1
                        },
                  ]
                }
            ]
        },
        {
            "label": "cpplint",
            "detail": "Lint files with cpplint.",
            "type": "shell",
            "command": "ament_cpplint src/",
            "presentation": {
                "panel": "dedicated",
                "reveal": "silent",
                "clear": true
            },
            "problemMatcher": [
                {
                    "owner": "cpplint",
                    "source": " cpplint",
                    "fileLocation": "absolute",
                    "pattern": [
                        {
                            "regexp": "^(.+):(\\d+):\\s+(.+)\\[(.+)\\]$",
                            "file": 1,
                            "line": 2,
                            "message": 3,
                            "code": 4
                        }
                    ]
                }
            ]
        },
        {
            "label": "cppcheck",
            "detail": "Run static code checker cppcheck.",
            "type": "shell",
            "command": "ament_cppcheck src/",
            "presentation": {
                "panel": "dedicated",
                "reveal": "silent",
                "clear": true
            },
            "problemMatcher": [
                {
                    "owner": "cppcheck",
                    "source": "cppcheck",
                    "pattern": [
                        {
                            "regexp": "^\\[(.+):(\\d+)\\]:\\s+(.+)$",
                            "file": 1,
                            "line": 2,
                            "message": 3
                        }
                    ]
                }
            ]
        },
        {
            "label": "lint_cmake",
            "detail": "Run lint on cmake files.",
            "type": "shell",
            "command": "ament_lint_cmake src/",
            "presentation": {
                "panel": "dedicated",
                "reveal": "silent",
                "clear": true
            },
            "problemMatcher": [
                {
                    "owner": "lint_cmake",
                    "source": "lint_cmake",
                    "pattern": [
                        {
                            "regexp": "^(.+):(\\d+):\\s+(.+)$",
                            "file": 1,
                            "line": 2,
                            "message": 3
                        }
                    ]
                }
            ]
        },
        {
            "label": "flake8",
            "detail": "Run flake8 on python files.",
            "type": "shell",
            "command": "ament_flake8 src/",
            "presentation": {
                "panel": "dedicated",
                "reveal": "silent",
                "clear": true
            },
            "problemMatcher": [
                {
                  "owner": "flake8",
                  "source": "flake8",
                  "pattern": [
                    {
                      "code": 4,
                      "column": 3,
                      "file": 1,
                      "line": 2,
                      "message": 5,
                      "regexp": "^(.+):(\\d+):(\\d+): (\\w\\d+) (.+)$"
                    }
                  ]
                }
              ]
        },
        {
            "label": "pep257",
            "detail": "Run pep257 on python files.",
            "type": "shell",
            "command": "ament_pep257 src/",
            "presentation": {
                "panel": "dedicated",
                "reveal": "silent",
                "clear": true
            },
            "problemMatcher": [
                {
                    "owner": "pep257",
                    "source": "pep257",
                    "pattern": [
                        {
                            "regexp": "^(.+):(\\d+)\\s+(.+):\\s+(.+):\\s+(.+)$",
                            "file": 1,
                            "line": 2,
                            "code": 4,
                            "message": 5
                        }
                    ]
                }
            ]
        },
        {
            "label": "xmllint",
            "detail": "Run xmllint on xml files.",
            "type": "shell",
            "command": "ament_xmllint src/",
            "presentation": {
                "panel": "dedicated",
                "reveal": "silent",
                "clear": true
            },
            "problemMatcher": [
                {
                    "owner": "xmllint",
                    "source": "xmllint",
                    "fileLocation": "absolute",
                    "pattern": [
                        {
                            "regexp": "^(.+):(\\d+):\\s+(.+)\\s+:\\s+(.+)$",
                            "file": 1,
                            "line": 2,
                            "code": 3,
                            "message": 4
                        }
                    ]
                }
            ]
        },
        {
            "label": "lint all",
            "detail": "Run all linters.",
            "dependsOn":["cppcheck", "cpplint", "flake8", "lint_cmake", "pep257","xmllint", "uncrustify"],
            "problemMatcher": []
        },
        // Workspace editing tasks
        {
            "label": "new ament_cmake package",
            "detail": "Create a new ROS cpp package from a template.",
            "type": "shell",
            "command": "ros2 pkg create --destination-directory src --build-type ament_cmake ${input:package}",
            "problemMatcher": []
        },
        {
            "label": "new ament_python package",
            "detail": "Create a new ROS python package from a template.",
            "type": "shell",
            "command": "ros2 pkg create --destination-directory src --build-type ament_python ${input:package}",
            "problemMatcher": []
        },
        {
            "label": "import from workspace file",
            "detail": "Use vcs to import modules specified by a workspace/rosinstall file.",
            "type": "shell",
            "command": "vcs import < src/ros2.repos src",
            "problemMatcher": []
        },
        {
            "label": "update workspace file",
            "detail": "Use vcs to update repositories in src to workspace file.",
            "type": "shell",
            "command": "vcs export src > src/ros2.repos",
            "problemMatcher": []
        },
        {
            "label": "install dependencies",
            "detail": "Install all dependencies specified in the workspaces package.xml files.",
            "type": "shell",
            "command": "sudo apt-get update && rosdep update && rosdep install --from-paths src --ignore-src -y",
            "problemMatcher": []
        }
    ],
    "inputs": [
        {
          "id": "package",
          "type": "promptString",
          "description": "Package name"
        }
      ]
}
