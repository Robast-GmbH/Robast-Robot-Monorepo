name: Create Docker Image MoveIt

#trigger workflow every day at 00:00
on:
  schedule:
    - cron: '0 0 07 * *'
  push:
    branches:
        - main
    paths:
        - src/ros2/moveit/Dockerfile
  workflow_dispatch:

env:
  Project-Name: moveit
  Devel-Tag: devel

jobs:
  # Allowed expressions in the `with` section are `github` and `needs`.
  # Therefore we need to take the env vars and set them as outputs to access them with `needs`.
  set_output_from_env:
    runs-on: ubuntu-latest
    outputs:
      project-name: ${{ steps.set-project-name.outputs.project-name }}
      devel-tag: ${{ steps.set-devel-tag.outputs.devel-tag }}
      branch-tag: ${{ steps.set-branch-tag.outputs.branch-tag }}
    steps:
    - id: set-project-name
      run: echo "project-name=${{ env.Project-Name }}" >> "$GITHUB_OUTPUT"
    - id: set-devel-tag
      run: echo "devel-tag=${{ env.Devel-Tag }}" >> "$GITHUB_OUTPUT"
    - id: set-branch-tag
      run: |
        get_branch_name() {
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "${{ github.head_ref || 'none' }}"
          else
            echo "${{ github.ref_name || 'none' }}"
          fi
        }
    
        branch_name=$(get_branch_name)
    
        if ([ "${{ github.event_name }}" = "push" ] || [ "${{ github.event_name }}" = "workflow_dispatch" ]) && [ "$branch_name" = "main" ]; then
          branch_tag=""
        else
          if [[ $branch_name =~ [0-9] ]]; then
            branch_tag="-RE-$(echo $branch_name | grep -oP '\d{1,5}')"
          else
            branch_tag="-$branch_name"
          fi
        fi
    
        echo "branch-tag=$branch_tag" >> "$GITHUB_OUTPUT"

  build-devel:
    needs: set_output_from_env
    uses: ./.github/workflows/create_multi_platform_image.yml
    with:
      project-name: ${{ needs.set_output_from_env.outputs.project-name }}
      tag: ${{ needs.set_output_from_env.outputs.devel-tag }}-humble
      branch-tag: ${{ needs.set_output_from_env.outputs.branch-tag }}
      context: src/ros2/${{ needs.set_output_from_env.outputs.project-name }}
      file: src/ros2/${{ needs.set_output_from_env.outputs.project-name }}/Dockerfile
      target: ${{ needs.set_output_from_env.outputs.devel-tag }}
