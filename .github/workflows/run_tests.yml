name: Statemachine Test

on: push
  # pull_request:
  #   types: [opened, synchronize, reopened]
    
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: dorny/paths-filter@v2.11.1
      id: filter
      with:
        filters: |
          hardware_nodes:
            - 'src/ros2/hardware_nodes/*'
          statemachine:
            - 'src/ros2/statemachine/*'
          communication_interfaces  
            - 'src/ros2/communication_interfaces/*'

    #run hardware_nodes
    - name: hardware_nodes tests
      if: steps.filter.outputs.hardware_nodes == 'true'
      env:
        Project: hardware_nodes
      working-directory: src/ros2/${{ env.Project }}
      run: |
          docker build . --tag ghcr.io/robast-gmbh/monorepo/${{ env.Project }}
          docker run -v $(pwd):/workspace/src/${{ env.Project }} -v $(pwd)/../communication_interfaces:/workspace/src/communication_interfaces --name ${{ env.Project }}_container ghcr.io/robast-gmbh/monorepo/${{ env.Project }}  /bin/sh -c "cd /workspace/ && sudo apt-get update && sudo apt-get upgrade -y && rosdep update && rosdep install --from-paths src --ignore-src -r -y && colcon build --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' -Wall -Wextra -Wpedantic && colcon test --event-handler=console_direct+ && colcon test-result --all
          docker push ghcr.io/robast-gmbh/monorepo/${{ env.Project }}
    
    - name: statemachine tests
      if: steps.filter.outputs.statemachine == 'true'
      env:
        Project: statemachine
      working-directory: src/ros2/${{ env.Project }}
      run: |
          docker build . --tag ghcr.io/robast-gmbh/monorepo/${{ env.Project }}
          docker run -v $(pwd):/workspace/src/${{ env.Project }} -v $(pwd)/../communication_interfaces:/workspace/src/communication_interfaces --name ${{ env.Project }}_container ghcr.io/robast-gmbh/monorepo/${{ env.Project }}  /bin/sh -c "cd /workspace/ && sudo apt-get update && sudo apt-get upgrade -y && rosdep update && rosdep install --from-paths src --ignore-src -r -y && colcon build --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' -Wall -Wextra -Wpedantic && colcon test --event-handler=console_direct+ && colcon test-result --all
          docker push ghcr.io/robast-gmbh/monorepo/${{ env.Project }}

    - name: communication_interfaces tests
      if: steps.filter.outputs.communication_interfaces == 'true'
      env:
        Project: communication_interfaces
      working-directory: src/ros2/${{ env.Project }}
      run: |
          docker build . --tag ghcr.io/robast-gmbh/monorepo/${{ env.Project }}
          docker run -v $(pwd):/workspace/src/${{ env.Project }} -v $(pwd)/../communication_interfaces:/workspace/src/communication_interfaces --name ${{ env.Project }}_container ghcr.io/robast-gmbh/monorepo/${{ env.Project }}  /bin/sh -c "cd /workspace/ && sudo apt-get update && sudo apt-get upgrade -y && rosdep update && rosdep install --from-paths src --ignore-src -r -y && colcon build --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' -Wall -Wextra -Wpedantic && colcon test --event-handler=console_direct+ && colcon test-result --all
          docker push ghcr.io/robast-gmbh/monorepo/${{ env.Project }}

    # - name: workflow tests
    #   if: steps.filter.outputs.workflow == 'true'
    #   env:
    #     Project: workflows
    #   working-directory: src/ros2/${{ env.Project }}
    #   run: |
    #       docker build . --tag ghcr.io/robast-gmbh/monorepo/${{ env.Project }}
    #       docker run -v $(pwd):/workspace/src/${{ env.Project }} -v $(pwd)/../communication_interfaces:/workspace/src/communication_interfaces --name ${{ env.Project }}_container ghcr.io/robast-gmbh/monorepo/${{ env.Project }}  /bin/sh -c "cd /workspace/ && sudo apt-get update && sudo apt-get upgrade -y && rosdep update && rosdep install --from-paths src --ignore-src -r -y && colcon build --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' -Wall -Wextra -Wpedantic && colcon test --event-handler=console_direct+ && colcon test-result --all
    #       docker push ghcr.io/robast-gmbh/monorepo/${{ env.Project }}


            

    # - name: Login to GitHub Container Registry
    #   uses: docker/login-action@v2
    #   with:
    #       registry: ghcr.io
    #       username: ${{ github.actor }}
    #       password: ${{ secrets.GITHUB_TOKEN }}

    # - name: Build docker
    #   working-directory: src/ros2/${{ env.Project }}
    #   run: |
    #         docker build . --tag ghcr.io/robast-gmbh/monorepo/${{ env.Project }}
    #         docker run ghcr.io/robast-gmbh/monorepo/${{ env.Project }}
    #         docker push ghcr.io/robast-gmbh/monorepo/${{ env.Project }}
    # - name: Run docker and execute tests
    #   working-directory: src/ros2/${{ env.Project }}
    #   run: docker run -v $(pwd):/workspace/src/${{ env.Project }} -v $(pwd)/../communication_interfaces:/workspace/src/communication_interfaces --name ${{ env.Project }}_container ghcr.io/robast-gmbh/monorepo/${{ env.Project }}  /bin/sh -c "cd /workspace/ && sudo apt-get update && sudo apt-get upgrade -y && rosdep update && rosdep install --from-paths src --ignore-src -r -y && colcon build --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' -Wall -Wextra -Wpedantic && colcon test --event-handler=console_direct+ && colcon test-result --all"
