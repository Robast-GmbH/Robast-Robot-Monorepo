name: Hardware Nodes Test

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - src/ros2/hardware_nodes/**
      - src/ros2/communication_interfaces/**
      - .github/workflows/run_hardware_node_tests.yml
      - .github/workflows/docker_create_hardware_nodes.yml
       
jobs:
  test-run-hardware_nodes:

    runs-on: ubuntu-latest
    env:
      Project: hardware_nodes

    steps:
    #- uses: actions/checkout@v3 
    # - uses: dorny/paths-filter@v2.11.1
    #   id: filter
    #   with:
    #     filters: |
    #       hardware_docker_changed:
    #         - 'src/ros2/hardware_nodes/Dockerfile'
    #       ${{ env.Project }}_docker_changed:
    #         - 'src/ros2/${{ env.Project }}/Dockerfile'

    - name: Checkout repository and submodules
      uses: actions/checkout@v3
      with:
          fetch-depth: 2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

    - name: configures Docker Buildx to create a builder instance for running the image build.
      uses: docker/setup-buildx-action@v3       
    
           
    - name: Run docker and execute tests
      working-directory: src/ros2/${{ env.Project }}
      run: >
              docker run -v $(pwd):/workspace/src/${{ env.Project }} 
              -v $(pwd)/../communication_interfaces:/workspace/src/communication_interfaces 
              -v $(pwd)/../error_handling/error_utils:/workspace/src/error_handling/error_utils
              -v $(pwd)/../dds_configs:/workspace/dds_configs
              -v $(pwd)/../../Hardware/cpp/libs:/workspace/libs 
              -v /home:/home
              --name ${{ env.Project }}_container ghcr.io/robast-gmbh/monorepo/${{ env.Project }}:devel
              /bin/sh -c "cd /workspace/ &&
              sudo apt-get update && 
              sudo apt-get upgrade -y &&
              sudo apt install lcov -y &&
              rosdep update; rosdep install --from-paths src --ignore-src -r -y && 
              export CYCLONEDDS_URI=/workspace/dds_configs/cyclone_DDS_github_config.xml &&
              colcon build --cmake-args -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_CXX_FLAGS=\"${CMAKE_CXX_FLAGS} --coverage\" -DCMAKE_C_FLAGS=\"${CMAKE_C_FLAGS} --coverage\" -Wall -Wextra -Wpedantic && 
              colcon test --event-handler=console_direct+ &&
              colcon test-result --all &&
              lcov --directory . --capture --output-file coverage-${{env.Project}}.info &&
              lcov --remove coverage-${{env.Project}}.info '/usr/*' --output-file coverage-${{env.Project}}.info &&
              lcov --list coverage-${{env.Project}}.info &&
              cp /workspace/coverage-${{env.Project}}.info /home/coverage-${{env.Project}}.info"
      
    - name: Wait for coverage report file
      run: |
          sleep 5
          ls /home/coverage-${{env.Project}}.info


    - name: Upload coverage report to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: /home/coverage-${{env.Project}}.info