name: Coverage

on: 
    workflow_dispatch:

jobs:
  test-run-statemachine:

    runs-on: ubuntu-latest
    env:
      Project: ros2_coverage

    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v3
      with:
          submodules: recursive

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate coverage report
      working-directory: .
      run: >
        docker build -t coverage project_startups/ros_integration_tests/Dockerfile &&
          docker run -v $(pwd):/workspace/src/${{ env.Project }}
          -v $(pwd)/src/ros2:/workspace/src/
          -v $(pwd)/libs:/workspace/libs 
          -v /home:/home
          --name coverage coverage
          /bin/sh -c "cd /workspace/ &&
          sudo apt-get update &&
          sudo apt-get upgrade -y &&
          rosdep update && rosdep install --from-paths src --ignore-src -r -y &&
          export CYCLONEDDS_URI=/workspace/dds_configs/cyclone_DDS_github_config.xml &&
          . /robast/humble/setup.sh &&
          . /workspace_mtc/install/setup.bash &&
          sudo apt install lcov -y &&
          colcon build --continue-on-error --cmake-args -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_CXX_FLAGS=\"${CMAKE_CXX_FLAGS} --coverage\" -DCMAKE_C_FLAGS=\"${CMAKE_C_FLAGS} --coverage\" -Wall -Wextra -Wpedantic &&
          colcon test &&
          colcon test-result --all &&
          lcov --directory . --capture --output-file coverage-${{env.Project}}.info &&
          lcov --remove coverage-${{env.Project}}.info '/usr/*' --output-file coverage-${{env.Project}}.info &&
          lcov --list coverage-${{env.Project}}.info &&
          cp /workspace/coverage-${{env.Project}}.info /home/coverage-${{env.Project}}.info"

    - name: Wait for coverage report file
      run: |
          sleep 5
          ls /home/coverage-${{env.Project}}.info

    - name: Upload coverage report to Codecov
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: /home/coverage-${{env.Project}}.info