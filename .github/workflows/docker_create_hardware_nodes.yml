name: Create Docker Image Hardware Nodes

# Trigger workflow every day at 00:00
on:
  schedule:
    - cron: '0 0 07 */2 *'
  push:
    branches:
      - main
    paths:
      - src/ros2/hardware_nodes/Dockerfile
      - src/ros2/hardware_nodes/**
  workflow_dispatch:

env:
  Ros-Distro: humble
  Registry: ghcr.io
  Repo: robast-gmbh/monorepo
  Project-Name: hardware_nodes
  Release-Tag: release
  Devel-Tag: devel

jobs:
  build-arm64:
    runs-on: self-hosted
    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v4
      with:
          submodules: recursive
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.Registry }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Configure Docker Buildx
      uses: docker/setup-buildx-action@v3 
    
    - name: Build ${{ env.Project-Name }} ${{ env.Devel-Tag }} docker
      uses: docker/build-push-action@v6
      with:
        context: src/ros2/${{ env.Project-Name }}/
        target: devel
        push: true
        file: src/ros2/${{ env.Project-Name }}/Dockerfile
        tags: ${{ env.Registry }}/${{ env.Repo }}/${{ env.Project-Name }}:${{ env.Devel-Tag }}-arm64

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ hashFiles('**/Dockerfile') }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build ${{ env.Project-Name }} ${{ env.Release-Tag }} docker
      uses: docker/build-push-action@v6
      with:
        context: src/ros2/${{ env.Project-Name }}/
        target: release
        platforms: linux/arm64/v8
        push: true
        file: src/ros2/${{ env.Project-Name }}/Dockerfile
        tags: ${{ env.Registry }}/${{ env.Repo }}/${{ env.Project-Name }}:${{ env.Release-Tag }}-arm64
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

  build-amd64:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v4
      with:
        fetch-depth: 2
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.Registry }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Configure Docker Buildx
      uses: docker/setup-buildx-action@v3 
    
    - name: Build ${{ env.Project-Name }} ${{ env.Devel-Tag }} docker
      uses: docker/build-push-action@v6
      with:
        context: src/ros2/${{ env.Project-Name }}/
        target: devel
        push: true
        file: src/ros2/${{ env.Project-Name }}/Dockerfile
        tags: ${{ env.Registry }}/${{ env.Repo }}/${{ env.Project-Name }}:${{ env.Devel-Tag }}-amd64

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ hashFiles('**/Dockerfile') }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build ${{ env.Project-Name }} ${{ env.Release-Tag }} docker
      uses: docker/build-push-action@v6
      with:
        context: src/ros2/${{ env.Project-Name }}/
        target: release
        platforms: linux/amd64
        push: true
        file: src/ros2/${{ env.Project-Name }}/Dockerfile
        tags: ${{ env.Registry }}/${{ env.Repo }}/${{ env.Project-Name }}:${{ env.Release-Tag }}-amd64
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

  create-multi-platform-manifest-devel:
    needs: [build-arm64, build-amd64]
    env:
      Registry: my-docker-registry
      Repo: my-repo
      Project_Name: my-project
      Release_Tag: v1.0.0
    uses: ./.github/workflows/create_multi_platform_manifest.yml
    with:
      registry: ${{ env.Registry }}
      repo: ${{ env.Repo }}
      project-name: ${{ env.Project_Name }}
      tag: ${{ env.Release_Tag }}

  create-multi-platform-manifest-release:
    needs: [build-arm64, build-amd64]
    uses: ./.github/workflows/create_multi_platform_manifest.yml
    with:
      registry: ${{ env.Registry }}
      repo: ${{ env.Repo }}
      project-name: ${{ env.Project-Name }}
      tag: ${{ env.Release-Tag }}