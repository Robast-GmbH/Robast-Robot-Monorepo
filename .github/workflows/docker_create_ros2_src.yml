name: Create Robast Base Images

on:
  push:
    branches:
      - main
    paths:
      - src/Dockerfile
      - src/Hardware/cpp/**
      - src/robot_backend/**
      - src/ros2/communication_interfaces/**
      - src/ros2/error_handling/**
  pull_request:
    paths:
      - src/Dockerfile
      - src/Hardware/cpp/**
      - src/robot_backend/**
      - src/ros2/communication_interfaces/**
      - src/ros2/error_handling/**
  workflow_dispatch:

env:
  Ros-Distro: humble
  Registry: ghcr.io
  Repo: robast-gmbh/monorepo
  Project-Name: robast-dev-base
  Project-Name-Core: robast-dev-core
  Project-Name-Source: robast-source

jobs:
  # Allowed expressions in the `with` section are `github` and `needs`.
  # Therefore we need to take the env vars and set them as outputs to access them with `needs`.
  set_output_from_env:
    runs-on: ubuntu-latest
    outputs:
      registry: ${{ steps.set-registry.outputs.registry }}
      repo: ${{ steps.set-repo.outputs.repo }}
      project-name: ${{ steps.set-project-name.outputs.project-name }}
      project-name-core: ${{ steps.set-project-name-core.outputs.project-name-core }}
      project-name-source: ${{ steps.set-project-name-source.outputs.project-name-source }}
      ros-distro: ${{ steps.set-ros-distro.outputs.ros-distro }}
      branch-tag: ${{ steps.set-branch-tag.outputs.branch-tag }}
    steps:
      - id: set-registry
        run: echo "registry=${{ env.Registry }}" >> "$GITHUB_OUTPUT"
      - id: set-repo
        run: echo "repo=${{ env.Repo }}" >> "$GITHUB_OUTPUT"
      - id: set-project-name
        run: echo "project-name=${{ env.Project-Name }}" >> "$GITHUB_OUTPUT"
      - id: set-project-name-core
        run: echo "project-name-core=${{ env.Project-Name-Core }}" >> "$GITHUB_OUTPUT"
      - id: set-project-name-source
        run: echo "project-name-source=${{ env.Project-Name-Source }}" >> "$GITHUB_OUTPUT"
      - id: set-ros-distro
        run: echo "ros-distro=${{ env.Ros-Distro }}" >> "$GITHUB_OUTPUT"
      - id: set-branch-tag
        run: |
          if ([ "${{ github.event_name }}" = "push" ] || [ "${{ github.event_name }}" = "workflow_dispatch" ]) && [ "${{ github.ref_name }}" = "main" ]; then
            branch_tag=""
          else
            branch_name="${{ github.ref_name || 'none' }}"
            if [[ $branch_name =~ [0-9] ]]; then
              branch_tag="-RE-$(echo $branch_name | grep -oP '\d{1,5}')"
            else
              branch_tag="-$branch_name"
            fi
          fi
          echo "branch-tag=$branch_tag" >> "$GITHUB_OUTPUT"

  build-dev-base:
    needs: set_output_from_env
    uses: ./.github/workflows/create_multi_platform_image.yml
    with:
      project-name: ${{ needs.set_output_from_env.outputs.project-name }}
      tag: ${{ needs.set_output_from_env.outputs.ros-distro }}
      branch-tag: ${{ needs.set_output_from_env.outputs.branch-tag }}
      context: src/
      file: src/Dockerfile
      target: ${{ needs.set_output_from_env.outputs.project-name }}

  build-dev-core:
    needs: set_output_from_env
    uses: ./.github/workflows/create_multi_platform_image.yml
    with:
      project-name: ${{ needs.set_output_from_env.outputs.project-name-core }}
      tag: ${{ needs.set_output_from_env.outputs.ros-distro }}
      branch-tag: ${{ needs.set_output_from_env.outputs.branch-tag }}
      context: src/
      file: src/Dockerfile
      target: ${{ needs.set_output_from_env.outputs.project-name-core }}

  build-source:
    needs: set_output_from_env
    uses: ./.github/workflows/create_multi_platform_image.yml
    with:
      project-name: ${{ needs.set_output_from_env.outputs.project-name-source }}
      tag: ${{ needs.set_output_from_env.outputs.ros-distro }}
      branch-tag: ${{ needs.set_output_from_env.outputs.branch-tag }}
      context: src/
      file: src/Dockerfile
      target: ${{ needs.set_output_from_env.outputs.project-name-source }}