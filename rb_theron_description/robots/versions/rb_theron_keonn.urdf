<?xml version="1.0" encoding="utf-8"?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from rb_theron_keonn.urdf.xacro     | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="rb_theron">
  <!-- ***************** -->
  <!-- Imported elements -->
  <!-- ***************** -->
  <!-- First we import all posible elements defined in the urdf.xacro files. All these elements are defined as macro:xacros -->
  <!-- in kg-->
  <!-- in kg-->
  <!-- in kg-->
  <!-- in kg-->
  <!-- in kg-->
  <!-- in kg-->
  <!-- in kg-->
  <!-- source en.wikipedia.org/wiki/List_of_moments_of_inertia-->
  <!-- This file unifies all sensors that can be used on simulation, defined as xacro:macros -->
  <!-- Includes -->
  <!-- *************** -->
  <!-- Robots Elements -->
  <!-- *************** -->
  <!-- Here we create the robot elements using the xacro:macros imported at the beggining of this file -->
  <!-- this property is for the chassis -->
  <!-- xacro:property name="wheel_width" value="0.150" / -->
  <link name="robot_base_footprint">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </visual>
  </link>
  <joint name="robot_base_footprint_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.0606"/>
    <parent link="robot_base_footprint"/>
    <child link="robot_base_link"/>
  </joint>
  <!-- BASE_LINK -->
  <link name="robot_base_link">
    <inertial>
      <mass value="50.0"/>
      <origin xyz="-0.120 0 0"/>
      <inertia ixx="2.01041666667" ixy="0" ixz="0" iyy="2.55208333333" iyz="0" izz="2.55208333333"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rb_theron_description/meshes/bases/theron_base.stl"/>
      </geometry>
      <material name="darkgrey">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0 " xyz="0 0 0"/>
      <geometry>
        <!--box size="0.390 0.240 0.165"/-->
        <mesh filename="package://rb_theron_description/meshes/bases/theron_base.stl"/>
      </geometry>
    </collision>
  </link>
  <!-- <link name="${prefix}bottom_cover_link">
      <inertial>
        <mass value="2.0" />
        <origin xyz="0 0 0" />
	    <xacro:box_inertia_robot m="2" x="0.700" y="0.600" z="0.350"/>
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <xacro:if value="${hq}">
          <geometry>
            <mesh filename="package://rb_theron_description/meshes/bases/mcq_prototype_bottom_cover.dae"/>
          </geometry>
        </xacro:if>
        <xacro:unless value="${hq}">
          <geometry>
            <box size="0.700 0.600 0.350"/>
          </geometry>
        </xacro:unless>
        <material name="darkgrey">
          <color rgba="0.1 0.1 0.1 1"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0 " />
        <geometry>
          <mesh filename="package://rb_theron_description/meshes/bases/mcq_prototype_bottom_cover.dae"/>
        </geometry>
      </collision>
    </link> -->
  <!-- <joint name="${prefix}bottom_cover_joint" type="fixed">
       <origin rpy="0 0 0" xyz="0 0 0"/>
       <parent link="${prefix}base_link"/>
       <child link="${prefix}bottom_cover_link"/>
    </joint> -->
  <!-- DOCKING CONTACTS -->
  <!--joint name="${prefix}base_docking_joint" type="fixed">
      <origin xyz="0.030 0.000 0.068" rpy="0 0 0 " />
      <parent link="${prefix}front_cover_link"/>
      <child link="${prefix}base_docking_contact_link" />
    </joint-->
  <!-- DOCKING LINK -->
  <!--link name="${prefix}base_docking_contact_link" /-->
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="ros_control">
      <!--robotNamespace>/robot</robotNamespace-->
      <robotParam>robot/robot_description</robotParam>
      <controlPeriod>0.001</controlPeriod>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
      <legacyModeNS>true</legacyModeNS>
    </plugin>
  </gazebo>
  <gazebo reference="robot_base_footprint">
    <material>Gazebo/Green</material>
  </gazebo>
  <gazebo reference="robot_base_link">
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="robot_front_cover_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <!--ROCKER BOGIE SUPPORT -->
  <!--joint name="${prefix}joint_support" type="continuous">
      <parent link="${parent}"/>
      <child link="${prefix}support"/>
      <insert_block name="origin" />
      <axis xyz="0 1 0" rpy="0 0 ${M_PI}" />
      <limit effort="100" velocity="100"/>
      <joint_properties damping="0.1" friction="0.1"/>
	</joint -->
  <joint name="robot_rightjoint_rsupport" type="revolute">
    <parent link="robot_base_link"/>
    <child link="robot_rightrsupport"/>
    <origin rpy="0 0 0" xyz="0.1175 -0.1725 0.0428"/>
    <axis rpy="0 0 3.14159265359" xyz="0 1 0"/>
    <limit effort="100" lower="-0.5" upper="0.5" velocity="100"/>
    <joint_properties damping="0.1" friction="0.1"/>
  </joint>
  <link name="robot_rightrsupport">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rb_theron_description/meshes/rocker/mcq_prototype_rocker_r.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rb_theron_description/meshes/rocker/mcq_prototype_rocker_r.dae"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1.5"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="5e-05" ixy="0" ixz="0" iyy="5e-05" iyz="0" izz="7.5e-05"/>
      <!--Check these values -->
    </inertial>
  </link>
  <!-- Transmission is important to link the joints and the controller -->
  <transmission name="robot_rightrsupport_joint_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_rightjoint_rsupport">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_rightrsupport_joint_motor">
      <mechanicalReduction>1</mechanicalReduction>
      <motorTorqueConstant>1</motorTorqueConstant>
    </actuator>
  </transmission>
  <!-- xacro:rubber_wheel prefix="$(arg prefix)wheel" parent="$(arg prefix)support" reflect="true" hq="${hq}">
		<origin xyz="${wheel_offset_x} ${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0"/>
	</xacro:rubber_wheel -->
  <!--WHEEL TIRE -->
  <joint name="robot_right_wheel_joint" type="continuous">
    <parent link="robot_rightrsupport"/>
    <child link="robot_right_wheel_link"/>
    <origin rpy="0 0 0" xyz="-0.1175 -0.079 -0.0428"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>
  <link name="robot_right_wheel_link">
    <visual>
      <!-- HIGH RESOLUTION WHEELS -->
      <!-- LOW RESOLUTION WHEELS -->
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.025" radius="0.0756"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.025" radius="0.0756"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.25"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.000370230833333" ixy="0" ixz="0" iyy="0.000370230833333" iyz="0" izz="0.00071442"/>
    </inertial>
  </link>
  <!-- Transmission is important to link the joints and the controller (see rb_theron_control/config/rb_theron_control.yaml)-->
  <transmission name="robot_right_wheel_joint_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_right_wheel_joint">
      <!-- for the gazebo plugin -->
      <!--hardwareInterface>EffortJointInterface</hardwareInterface-->
      <!-- for ros control controller -->
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_right_wheel_joint_motor">
      <mechanicalReduction>1</mechanicalReduction>
      <motorTorqueConstant>20</motorTorqueConstant>
    </actuator>
  </transmission>
  <gazebo reference="robot_right_wheel_link">
    <!-- mu1 value="5.0"/>
			<mu2 value="0.5"/>
			<kp value="10000000.0" />
			<kd value="1.0" />
			<fdir1 value="1 0 0"/>
			<material>Gazebo/Yellow</material>
			<turnGravityOff>false</turnGravityOff -->
    <!-- mu1 value="5.0"/>
			<mu2 value="0.5"/ -->
    <mu1 value="100.0"/>
    <mu2 value="100.0"/>
    <!-- kp value="100000.0" / -->
    <kp value="500000.0"/>
    <kd value="1.0"/>
    <!-- fdir1 value="1 0 0"/ -->
    <material>Gazebo/Yellow</material>
    <turnGravityOff>false</turnGravityOff>
    <!--kp>500000.0</kp>
			<kd>10.0</kd>
			<mu1>10</mu1>
			<mu2>10</mu2>
			<fdir1>1 0 0</fdir1-->
    <!--minDepth>0.001</minDepth-->
    <!--material>Gazebo/Black</material-->
    <!--mu1 value="10"/>
			<mu2 value="5"/>
			<kp value="500000.0" />
			<kd value="10.0" />
			<fdir1 value="1 0 0"/>
			<material>Gazebo/Yellow</material>
			<turnGravityOff>false</turnGravityOff-->
  </gazebo>
  <!--gazebo reference="${name}_wheel_link">
			<kp>500000.0</kp>
			<kd>10.0</kd>
			<mu1>10</mu1>
			<mu2>10</mu2>
			<fdir1>1 0 0</fdir1>
			<maxVel>1.0</maxVel>
			<minDepth>0.003</minDepth>
			<material>Gazebo/Yellow</material>
			<turnGravityOff>false</turnGravityOff>
			<implicitSpringDamper>1</implicitSpringDamper>
		</gazebo-->
  <!-- xacro:caster prefix="$(arg prefix)left" parent="$(arg prefix)support" hq="${hq}">
		<origin xyz="${caster_offset_x} ${caster_offset_y} ${caster_offset_z}" rpy="0 0 0"/>
	</xacro:caster -->
  <!--CASTER SUPPORT -->
  <joint name="robot_rightcastorjoint_support" type="continuous">
    <parent link="robot_rightrsupport"/>
    <child link="robot_rightcastorsupport"/>
    <origin rpy="0 0 0" xyz="0.1175 0.01 0.002"/>
    <axis rpy="0 3.14159265359 0" xyz="0 0 1"/>
    <limit effort="100" velocity="100"/>
    <!-- joint_properties damping="1.5" friction="1.5"/ -->
    <dynamics damping="0" friction="0.01"/>
  </joint>
  <link name="robot_rightcastorsupport">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rb_theron_description/meshes/wheels/mcq_prototype_base_castor.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rb_theron_description/meshes/wheels/mcq_prototype_base_castor.dae"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1.5"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="5e-05" ixy="0" ixz="0" iyy="5e-05" iyz="0" izz="7.5e-05"/>
      <!--Check these values -->
    </inertial>
  </link>
  <joint name="robot_rightcastorjoint_wheel" type="continuous">
    <parent link="robot_rightcastorsupport"/>
    <child link="robot_rightcastorwheel"/>
    <origin rpy="0 0 0" xyz="-0.033 0.0 -0.071"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.1" friction="0.1"/>
  </joint>
  <link name="robot_rightcastorwheel">
    <visual>
      <!-- HIGH RESOLUTION WHEELS -->
      <!-- xacro:if value="${hq}">
          <origin xyz="0 0 0" rpy="0 0 0" />
          <geometry>     
		<mesh filename="package://rb_theron_description/meshes/wheels/mcq_prototype_castor_wheel.dae" />
          </geometry>         
        </xacro:if -->
      <!-- LOW RESOLUTION WHEELS -->
      <!-- xacro:unless value="${hq}" -->
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.025" radius="0.05"/>
        <!-- sphere radius="${caster_radius}"/ -->
      </geometry>
      <!-- /xacro:unless -->
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <!-- origin xyz="0 0 0" rpy="0 0 0" / -->
      <geometry>
        <!-- mesh filename="package://rb_theron_description/meshes/wheels/mcq_prototype_castor_wheel.dae" / -->
        <cylinder length="0.025" radius="0.05"/>
        <!-- sphere radius="${caster_radius}"/ -->
      </geometry>
      <surface>
        <bounce restitution_coefficient="1"/>
      </surface>
    </collision>
    <inertial>
      <mass value="0.25"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.000169270833333" ixy="0" ixz="0" iyy="0.000169270833333" iyz="0" izz="0.0003125"/>
    </inertial>
  </link>
  <!-- Transmission is important to link the joints and the controller -->
  <transmission name="robot_rightcastorsupport_joint_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_rightcastorjoint_support">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_rightcastorsupport_joint_motor">
      <mechanicalReduction>1</mechanicalReduction>
      <motorTorqueConstant>1</motorTorqueConstant>
    </actuator>
  </transmission>
  <transmission name="robot_rightcastorwheel_joint_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_rightcastorjoint_wheel">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_rightcastorwheel_joint_motor">
      <mechanicalReduction>1</mechanicalReduction>
      <motorTorqueConstant>1</motorTorqueConstant>
    </actuator>
  </transmission>
  <!-- gazebo reference="${prefix}support">
			<mu1 value="5.0"/>
			<mu2 value="0.5"/>
			<kp value="10000000.0" />
			<kd value="1.0" />
			<fdir1 value="1 0 0"/>
      <turnGravityOff>false</turnGravityOff>
    </gazebo -->
  <gazebo reference="robot_rightcastor_wheel">
    <mu1 value="100.0"/>
    <mu2 value="100.0"/>
    <!-- kp value="10000000.0" / -->
    <kp value="100000.0"/>
    <kd value="100.0"/>
    <!-- fdir1 value="1 0 0"/ -->
    <material>Gazebo/Black</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <!-- gazebo reference="${prefix}support">
			<mu1 value="5.0"/>
			<mu2 value="0.5"/>
			<kp value="10000000.0" />
			<kd value="1.0" />
			<fdir1 value="1 0 0"/>
      <turnGravityOff>false</turnGravityOff>
    </gazebo>
    
     <gazebo reference="${prefix}_wheel">
			<mu1 value="5.0"/>
			<mu2 value="0.5"/>
			<kp value="10000000.0" />
			<kd value="1.0" />
			<fdir1 value="1 0 0"/>
      <turnGravityOff>false</turnGravityOff>
    </gazebo -->
  <!--ROCKER BOGIE SUPPORT -->
  <!--joint name="${prefix}joint_support" type="continuous">
      <parent link="${parent}"/>
      <child link="${prefix}support"/>
      <insert_block name="origin" />
      <axis xyz="0 1 0" rpy="0 0 ${M_PI}" />
      <limit effort="100" velocity="100"/>
      <joint_properties damping="0.1" friction="0.1"/>
	</joint -->
  <joint name="robot_leftjoint_rsupport" type="revolute">
    <parent link="robot_base_link"/>
    <child link="robot_leftrsupport"/>
    <origin rpy="0 0 0" xyz="0.1175 0.1725 0.0428"/>
    <axis rpy="0 0 3.14159265359" xyz="0 1 0"/>
    <limit effort="100" lower="-0.5" upper="0.5" velocity="100"/>
    <joint_properties damping="0.1" friction="0.1"/>
  </joint>
  <link name="robot_leftrsupport">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rb_theron_description/meshes/rocker/mcq_prototype_rocker_l.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rb_theron_description/meshes/rocker/mcq_prototype_rocker_l.dae"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1.5"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="5e-05" ixy="0" ixz="0" iyy="5e-05" iyz="0" izz="7.5e-05"/>
      <!--Check these values -->
    </inertial>
  </link>
  <!-- Transmission is important to link the joints and the controller -->
  <transmission name="robot_leftrsupport_joint_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_leftjoint_rsupport">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_leftrsupport_joint_motor">
      <mechanicalReduction>1</mechanicalReduction>
      <motorTorqueConstant>1</motorTorqueConstant>
    </actuator>
  </transmission>
  <!-- xacro:rubber_wheel prefix="$(arg prefix)wheel" parent="$(arg prefix)support" reflect="true" hq="${hq}">
		<origin xyz="${wheel_offset_x} ${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0"/>
	</xacro:rubber_wheel -->
  <!--WHEEL TIRE -->
  <joint name="robot_left_wheel_joint" type="continuous">
    <parent link="robot_leftrsupport"/>
    <child link="robot_left_wheel_link"/>
    <origin rpy="0 0 0" xyz="-0.1175 0.079 -0.0428"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>
  <link name="robot_left_wheel_link">
    <visual>
      <!-- HIGH RESOLUTION WHEELS -->
      <!-- LOW RESOLUTION WHEELS -->
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.025" radius="0.0756"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.025" radius="0.0756"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.25"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.000370230833333" ixy="0" ixz="0" iyy="0.000370230833333" iyz="0" izz="0.00071442"/>
    </inertial>
  </link>
  <!-- Transmission is important to link the joints and the controller (see rb_theron_control/config/rb_theron_control.yaml)-->
  <transmission name="robot_left_wheel_joint_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_left_wheel_joint">
      <!-- for the gazebo plugin -->
      <!--hardwareInterface>EffortJointInterface</hardwareInterface-->
      <!-- for ros control controller -->
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_left_wheel_joint_motor">
      <mechanicalReduction>1</mechanicalReduction>
      <motorTorqueConstant>20</motorTorqueConstant>
    </actuator>
  </transmission>
  <gazebo reference="robot_left_wheel_link">
    <!-- mu1 value="5.0"/>
			<mu2 value="0.5"/>
			<kp value="10000000.0" />
			<kd value="1.0" />
			<fdir1 value="1 0 0"/>
			<material>Gazebo/Yellow</material>
			<turnGravityOff>false</turnGravityOff -->
    <!-- mu1 value="5.0"/>
			<mu2 value="0.5"/ -->
    <mu1 value="100.0"/>
    <mu2 value="100.0"/>
    <!-- kp value="100000.0" / -->
    <kp value="500000.0"/>
    <kd value="1.0"/>
    <!-- fdir1 value="1 0 0"/ -->
    <material>Gazebo/Yellow</material>
    <turnGravityOff>false</turnGravityOff>
    <!--kp>500000.0</kp>
			<kd>10.0</kd>
			<mu1>10</mu1>
			<mu2>10</mu2>
			<fdir1>1 0 0</fdir1-->
    <!--minDepth>0.001</minDepth-->
    <!--material>Gazebo/Black</material-->
    <!--mu1 value="10"/>
			<mu2 value="5"/>
			<kp value="500000.0" />
			<kd value="10.0" />
			<fdir1 value="1 0 0"/>
			<material>Gazebo/Yellow</material>
			<turnGravityOff>false</turnGravityOff-->
  </gazebo>
  <!--gazebo reference="${name}_wheel_link">
			<kp>500000.0</kp>
			<kd>10.0</kd>
			<mu1>10</mu1>
			<mu2>10</mu2>
			<fdir1>1 0 0</fdir1>
			<maxVel>1.0</maxVel>
			<minDepth>0.003</minDepth>
			<material>Gazebo/Yellow</material>
			<turnGravityOff>false</turnGravityOff>
			<implicitSpringDamper>1</implicitSpringDamper>
		</gazebo-->
  <!-- xacro:caster prefix="$(arg prefix)left" parent="$(arg prefix)support" hq="${hq}">
		<origin xyz="${caster_offset_x} ${caster_offset_y} ${caster_offset_z}" rpy="0 0 0"/>
	</xacro:caster -->
  <!--CASTER SUPPORT -->
  <joint name="robot_leftcastorjoint_support" type="continuous">
    <parent link="robot_leftrsupport"/>
    <child link="robot_leftcastorsupport"/>
    <origin rpy="0 0 0" xyz="0.1175 0.01 0.002"/>
    <axis rpy="0 3.14159265359 0" xyz="0 0 1"/>
    <limit effort="100" velocity="100"/>
    <!-- joint_properties damping="1.5" friction="1.5"/ -->
    <dynamics damping="0" friction="0.01"/>
  </joint>
  <link name="robot_leftcastorsupport">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rb_theron_description/meshes/wheels/mcq_prototype_base_castor.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rb_theron_description/meshes/wheels/mcq_prototype_base_castor.dae"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1.5"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="5e-05" ixy="0" ixz="0" iyy="5e-05" iyz="0" izz="7.5e-05"/>
      <!--Check these values -->
    </inertial>
  </link>
  <joint name="robot_leftcastorjoint_wheel" type="continuous">
    <parent link="robot_leftcastorsupport"/>
    <child link="robot_leftcastorwheel"/>
    <origin rpy="0 0 0" xyz="-0.033 0.0 -0.071"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.1" friction="0.1"/>
  </joint>
  <link name="robot_leftcastorwheel">
    <visual>
      <!-- HIGH RESOLUTION WHEELS -->
      <!-- xacro:if value="${hq}">
          <origin xyz="0 0 0" rpy="0 0 0" />
          <geometry>     
		<mesh filename="package://rb_theron_description/meshes/wheels/mcq_prototype_castor_wheel.dae" />
          </geometry>         
        </xacro:if -->
      <!-- LOW RESOLUTION WHEELS -->
      <!-- xacro:unless value="${hq}" -->
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.025" radius="0.05"/>
        <!-- sphere radius="${caster_radius}"/ -->
      </geometry>
      <!-- /xacro:unless -->
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <!-- origin xyz="0 0 0" rpy="0 0 0" / -->
      <geometry>
        <!-- mesh filename="package://rb_theron_description/meshes/wheels/mcq_prototype_castor_wheel.dae" / -->
        <cylinder length="0.025" radius="0.05"/>
        <!-- sphere radius="${caster_radius}"/ -->
      </geometry>
      <surface>
        <bounce restitution_coefficient="1"/>
      </surface>
    </collision>
    <inertial>
      <mass value="0.25"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.000169270833333" ixy="0" ixz="0" iyy="0.000169270833333" iyz="0" izz="0.0003125"/>
    </inertial>
  </link>
  <!-- Transmission is important to link the joints and the controller -->
  <transmission name="robot_leftcastorsupport_joint_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_leftcastorjoint_support">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_leftcastorsupport_joint_motor">
      <mechanicalReduction>1</mechanicalReduction>
      <motorTorqueConstant>1</motorTorqueConstant>
    </actuator>
  </transmission>
  <transmission name="robot_leftcastorwheel_joint_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_leftcastorjoint_wheel">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_leftcastorwheel_joint_motor">
      <mechanicalReduction>1</mechanicalReduction>
      <motorTorqueConstant>1</motorTorqueConstant>
    </actuator>
  </transmission>
  <!-- gazebo reference="${prefix}support">
			<mu1 value="5.0"/>
			<mu2 value="0.5"/>
			<kp value="10000000.0" />
			<kd value="1.0" />
			<fdir1 value="1 0 0"/>
      <turnGravityOff>false</turnGravityOff>
    </gazebo -->
  <gazebo reference="robot_leftcastor_wheel">
    <mu1 value="100.0"/>
    <mu2 value="100.0"/>
    <!-- kp value="10000000.0" / -->
    <kp value="100000.0"/>
    <kd value="100.0"/>
    <!-- fdir1 value="1 0 0"/ -->
    <material>Gazebo/Black</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <!-- gazebo reference="${prefix}support">
			<mu1 value="5.0"/>
			<mu2 value="0.5"/>
			<kp value="10000000.0" />
			<kd value="1.0" />
			<fdir1 value="1 0 0"/>
      <turnGravityOff>false</turnGravityOff>
    </gazebo>
    
     <gazebo reference="${prefix}_wheel">
			<mu1 value="5.0"/>
			<mu2 value="0.5"/>
			<kp value="10000000.0" />
			<kd value="1.0" />
			<fdir1 value="1 0 0"/>
      <turnGravityOff>false</turnGravityOff>
    </gazebo -->
  <!--CASTER SUPPORT -->
  <joint name="robot_leftjoint_support" type="continuous">
    <parent link="robot_base_link"/>
    <child link="robot_leftsupport"/>
    <origin rpy="0 0 0" xyz="-0.235 0.1725 0.0428"/>
    <axis rpy="0 3.14159265359 0" xyz="0 0 1"/>
    <limit effort="100" velocity="100"/>
    <!-- joint_properties damping="1.5" friction="1.5"/ -->
    <dynamics damping="0" friction="0.01"/>
  </joint>
  <link name="robot_leftsupport">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rb_theron_description/meshes/wheels/mcq_prototype_base_castor.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rb_theron_description/meshes/wheels/mcq_prototype_base_castor.dae"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1.5"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="5e-05" ixy="0" ixz="0" iyy="5e-05" iyz="0" izz="7.5e-05"/>
      <!--Check these values -->
    </inertial>
  </link>
  <joint name="robot_leftjoint_wheel" type="continuous">
    <parent link="robot_leftsupport"/>
    <child link="robot_leftwheel"/>
    <origin rpy="0 0 0" xyz="-0.033 0.0 -0.071"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.1" friction="0.1"/>
  </joint>
  <link name="robot_leftwheel">
    <visual>
      <!-- HIGH RESOLUTION WHEELS -->
      <!-- xacro:if value="${hq}">
          <origin xyz="0 0 0" rpy="0 0 0" />
          <geometry>     
		<mesh filename="package://rb_theron_description/meshes/wheels/mcq_prototype_castor_wheel.dae" />
          </geometry>         
        </xacro:if -->
      <!-- LOW RESOLUTION WHEELS -->
      <!-- xacro:unless value="${hq}" -->
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.025" radius="0.05"/>
        <!-- sphere radius="${caster_radius}"/ -->
      </geometry>
      <!-- /xacro:unless -->
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <!-- origin xyz="0 0 0" rpy="0 0 0" / -->
      <geometry>
        <!-- mesh filename="package://rb_theron_description/meshes/wheels/mcq_prototype_castor_wheel.dae" / -->
        <cylinder length="0.025" radius="0.05"/>
        <!-- sphere radius="${caster_radius}"/ -->
      </geometry>
      <surface>
        <bounce restitution_coefficient="1"/>
      </surface>
    </collision>
    <inertial>
      <mass value="0.25"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.000169270833333" ixy="0" ixz="0" iyy="0.000169270833333" iyz="0" izz="0.0003125"/>
    </inertial>
  </link>
  <!-- Transmission is important to link the joints and the controller -->
  <transmission name="robot_leftsupport_joint_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_leftjoint_support">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_leftsupport_joint_motor">
      <mechanicalReduction>1</mechanicalReduction>
      <motorTorqueConstant>1</motorTorqueConstant>
    </actuator>
  </transmission>
  <transmission name="robot_leftwheel_joint_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_leftjoint_wheel">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_leftwheel_joint_motor">
      <mechanicalReduction>1</mechanicalReduction>
      <motorTorqueConstant>1</motorTorqueConstant>
    </actuator>
  </transmission>
  <!-- gazebo reference="${prefix}support">
			<mu1 value="5.0"/>
			<mu2 value="0.5"/>
			<kp value="10000000.0" />
			<kd value="1.0" />
			<fdir1 value="1 0 0"/>
      <turnGravityOff>false</turnGravityOff>
    </gazebo -->
  <gazebo reference="robot_left_wheel">
    <mu1 value="100.0"/>
    <mu2 value="100.0"/>
    <!-- kp value="10000000.0" / -->
    <kp value="100000.0"/>
    <kd value="100.0"/>
    <!-- fdir1 value="1 0 0"/ -->
    <material>Gazebo/Black</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <!--CASTER SUPPORT -->
  <joint name="robot_rightjoint_support" type="continuous">
    <parent link="robot_base_link"/>
    <child link="robot_rightsupport"/>
    <origin rpy="0 0 0" xyz="-0.235 -0.1725 0.0428"/>
    <axis rpy="0 3.14159265359 0" xyz="0 0 1"/>
    <limit effort="100" velocity="100"/>
    <!-- joint_properties damping="1.5" friction="1.5"/ -->
    <dynamics damping="0" friction="0.01"/>
  </joint>
  <link name="robot_rightsupport">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rb_theron_description/meshes/wheels/mcq_prototype_base_castor.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rb_theron_description/meshes/wheels/mcq_prototype_base_castor.dae"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1.5"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="5e-05" ixy="0" ixz="0" iyy="5e-05" iyz="0" izz="7.5e-05"/>
      <!--Check these values -->
    </inertial>
  </link>
  <joint name="robot_rightjoint_wheel" type="continuous">
    <parent link="robot_rightsupport"/>
    <child link="robot_rightwheel"/>
    <origin rpy="0 0 0" xyz="-0.033 0.0 -0.071"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.1" friction="0.1"/>
  </joint>
  <link name="robot_rightwheel">
    <visual>
      <!-- HIGH RESOLUTION WHEELS -->
      <!-- xacro:if value="${hq}">
          <origin xyz="0 0 0" rpy="0 0 0" />
          <geometry>     
		<mesh filename="package://rb_theron_description/meshes/wheels/mcq_prototype_castor_wheel.dae" />
          </geometry>         
        </xacro:if -->
      <!-- LOW RESOLUTION WHEELS -->
      <!-- xacro:unless value="${hq}" -->
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.025" radius="0.05"/>
        <!-- sphere radius="${caster_radius}"/ -->
      </geometry>
      <!-- /xacro:unless -->
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <!-- origin xyz="0 0 0" rpy="0 0 0" / -->
      <geometry>
        <!-- mesh filename="package://rb_theron_description/meshes/wheels/mcq_prototype_castor_wheel.dae" / -->
        <cylinder length="0.025" radius="0.05"/>
        <!-- sphere radius="${caster_radius}"/ -->
      </geometry>
      <surface>
        <bounce restitution_coefficient="1"/>
      </surface>
    </collision>
    <inertial>
      <mass value="0.25"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.000169270833333" ixy="0" ixz="0" iyy="0.000169270833333" iyz="0" izz="0.0003125"/>
    </inertial>
  </link>
  <!-- Transmission is important to link the joints and the controller -->
  <transmission name="robot_rightsupport_joint_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_rightjoint_support">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_rightsupport_joint_motor">
      <mechanicalReduction>1</mechanicalReduction>
      <motorTorqueConstant>1</motorTorqueConstant>
    </actuator>
  </transmission>
  <transmission name="robot_rightwheel_joint_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_rightjoint_wheel">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_rightwheel_joint_motor">
      <mechanicalReduction>1</mechanicalReduction>
      <motorTorqueConstant>1</motorTorqueConstant>
    </actuator>
  </transmission>
  <!-- gazebo reference="${prefix}support">
			<mu1 value="5.0"/>
			<mu2 value="0.5"/>
			<kp value="10000000.0" />
			<kd value="1.0" />
			<fdir1 value="1 0 0"/>
      <turnGravityOff>false</turnGravityOff>
    </gazebo -->
  <gazebo reference="robot_right_wheel">
    <mu1 value="100.0"/>
    <mu2 value="100.0"/>
    <!-- kp value="10000000.0" / -->
    <kp value="100000.0"/>
    <kd value="100.0"/>
    <!-- fdir1 value="1 0 0"/ -->
    <material>Gazebo/Black</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <joint name="robot_pole_joint" type="fixed">
    <parent link="robot_base_link"/>
    <child link="robot_pole_link"/>
    <origin rpy="0 0 0" xyz="0.0 0.0 0.2208"/>
  </joint>
  <!-- BASE_LINK -->
  <link name="robot_pole_link">
    <inertial>
      <mass value="10.0"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="2.05416666667" ixy="0" ixz="0" iyy="2.05416666667" iyz="0" izz="2.05416666667"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <!-- in this case change origin -->
      <geometry>
        <!-- <box size="0.25 0.25 1.55"/> -->
        <mesh filename="package://rb_theron_description/meshes/pole/simple_pole.dae"/>
      </geometry>
      <material name="darkgrey">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0 " xyz="0 0 0"/>
      <geometry>
        <!-- <box size="0.25 0.25 1.55"/> -->
        <mesh filename="package://rb_theron_description/meshes/pole/simple_pole.dae"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="robot_pole_link">
    <mu1 value="100.0"/>
    <mu2 value="100.0"/>
    <kp value="500000.0"/>
    <kd value="1.0"/>
    <material>Gazebo/Yellow</material>
    <turnGravityOff>false</turnGravityOff>
    <!--kp>500000.0</kp>
			<kd>10.0</kd>
			<mu1>10</mu1>
			<mu2>10</mu2>
			<fdir1>1 0 0</fdir1-->
    <!--minDepth>0.001</minDepth-->
    <!--material>Gazebo/Black</material-->
    <!--mu1 value="10"/>
			<mu2 value="5"/>
			<kp value="500000.0" />
			<kd value="10.0" />
			<fdir1 value="1 0 0"/>
			<material>Gazebo/Yellow</material>
			<turnGravityOff>false</turnGravityOff-->
  </gazebo>
  <joint name="robot_front_realsense_camera_base_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3295 0.0 0.1898"/>
    <parent link="robot_base_link"/>
    <child link="robot_front_realsense_camera_base_link"/>
  </joint>
  <link name="robot_front_realsense_camera_base_link"/>
  <!-- camera body, with origin at bottom screw mount -->
  <joint name="robot_front_realsense_camera_joint" type="fixed">
    <parent link="robot_front_realsense_camera_base_link"/>
    <child link="robot_front_realsense_camera_link"/>
    <origin rpy="0 0 0" xyz="0.01 0.02 0"/>
    <child link="robot_front_realsense_camera_link"/>
  </joint>
  <link name="robot_front_realsense_camera_link">
    <!-- camera link is aligned with the infrared sensor 1 that is "in the middle of the camera", not the one in the edge -->
    <visual>
      <origin rpy="1.57079632679 0 1.57079632679" xyz="0.0149 -0.0175 0"/>
      <geometry>
        <!-- <box size="${d435_cam_width} ${d435_cam_height} ${d435_cam_depth}"/> -->
        <mesh filename="package://robotnik_sensors/meshes/intel_d435.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 -0.0175 0"/>
      <geometry>
        <box size="0.02505 0.09 0.025"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0.0025 -0.015 0.0"/>
      <mass value="0.1"/>
      <inertia ixx="7.27083333333e-05" ixy="0" ixz="0" iyy="1.04166666667e-05" iyz="0" izz="7.27083333333e-05"/>
    </inertial>
  </link>
  <gazebo reference="robot_front_realsense_camera_link">
    <self_collide>0</self_collide>
    <enable_wind>0</enable_wind>
    <kinematic>0</kinematic>
    <gravity>1</gravity>
    <!--<mu>1</mu>-->
    <mu2>1</mu2>
    <fdir1>0 0 0</fdir1>
    <!--<slip1>0</slip1>
     <slip2>0</slip2>-->
    <kp>1e+13</kp>
    <kd>1</kd>
    <!--<max_vel>0.01</max_vel>
     <min_depth>0</min_depth>-->
    <sensor name="robot_front_realsense_cameracolor" type="camera">
      <camera name="robot_front_realsense_camera">
        <horizontal_fov>1.21125850088</horizontal_fov>
        <image>
          <width>1920</width>
          <height>1080</height>
          <format>RGB_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>30</update_rate>
      <visualize>1</visualize>
    </sensor>
    <sensor name="robot_front_realsense_cameraired1" type="camera">
      <camera name="robot_front_realsense_camera">
        <horizontal_fov>1.4870205227</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>L_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.05</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>90</update_rate>
      <visualize>0</visualize>
    </sensor>
    <sensor name="robot_front_realsense_cameraired2" type="camera">
      <camera name="robot_front_realsense_camera">
        <horizontal_fov>1.4870205227</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>L_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.05</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>90</update_rate>
      <visualize>0</visualize>
    </sensor>
    <sensor name="robot_front_realsense_cameradepth" type="depth">
      <camera name="robot_front_realsense_camera">
        <horizontal_fov>1.4870205227</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.100</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>90</update_rate>
      <visualize>0</visualize>
    </sensor>
  </gazebo>
  <gazebo>
    <plugin filename="librealsense_gazebo_plugin.so" name="front_realsense_camera">
      <prefix>robot_front_realsense_camera</prefix>
      <depthUpdateRate>60.0</depthUpdateRate>
      <colorUpdateRate>60.0</colorUpdateRate>
      <infraredUpdateRate>60.0</infraredUpdateRate>
      <depthTopicName>depth/image_raw</depthTopicName>
      <depthCameraInfoTopicName>depth/camera_info</depthCameraInfoTopicName>
      <colorTopicName>color/image_raw</colorTopicName>
      <colorCameraInfoTopicName>color/camera_info</colorCameraInfoTopicName>
      <infrared1TopicName>infra1/image_raw</infrared1TopicName>
      <infrared1CameraInfoTopicName>infra1/camera_info</infrared1CameraInfoTopicName>
      <infrared2TopicName>infra2/image_raw</infrared2TopicName>
      <infrared2CameraInfoTopicName>infra2/camera_info</infrared2CameraInfoTopicName>
      <colorOpticalframeName>robot_front_realsense_camera_color_optical_frame</colorOpticalframeName>
      <depthOpticalframeName>robot_front_realsense_camera_depth_optical_frame</depthOpticalframeName>
      <infrared1OpticalframeName>robot_front_realsense_camera_left_ir_optical_frame</infrared1OpticalframeName>
      <infrared2OpticalframeName>robot_front_realsense_camera_right_ir_optical_frame</infrared2OpticalframeName>
      <rangeMinDepth>0.2</rangeMinDepth>
      <rangeMaxDepth>10.0</rangeMaxDepth>
      <pointCloud>false</pointCloud>
      <pointCloudTopicName>depth/points</pointCloudTopicName>
      <pointCloudCutoff>0.5</pointCloudCutoff>
    </plugin>
  </gazebo>
  <joint name="robot_rear_realsense_camera_base_joint" type="fixed">
    <origin rpy="0 0 3.1416" xyz="-0.3295 0.0 0.1898"/>
    <parent link="robot_base_link"/>
    <child link="robot_rear_realsense_camera_base_link"/>
  </joint>
  <link name="robot_rear_realsense_camera_base_link"/>
  <!-- camera body, with origin at bottom screw mount -->
  <joint name="robot_rear_realsense_camera_joint" type="fixed">
    <parent link="robot_rear_realsense_camera_base_link"/>
    <child link="robot_rear_realsense_camera_link"/>
    <origin rpy="0 0 0" xyz="0.01 0.02 0"/>
    <child link="robot_rear_realsense_camera_link"/>
  </joint>
  <link name="robot_rear_realsense_camera_link">
    <!-- camera link is aligned with the infrared sensor 1 that is "in the middle of the camera", not the one in the edge -->
    <visual>
      <origin rpy="1.57079632679 0 1.57079632679" xyz="0.0149 -0.0175 0"/>
      <geometry>
        <!-- <box size="${d435_cam_width} ${d435_cam_height} ${d435_cam_depth}"/> -->
        <mesh filename="package://robotnik_sensors/meshes/intel_d435.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 -0.0175 0"/>
      <geometry>
        <box size="0.02505 0.09 0.025"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0.0025 -0.015 0.0"/>
      <mass value="0.1"/>
      <inertia ixx="7.27083333333e-05" ixy="0" ixz="0" iyy="1.04166666667e-05" iyz="0" izz="7.27083333333e-05"/>
    </inertial>
  </link>
  <gazebo reference="robot_rear_realsense_camera_link">
    <self_collide>0</self_collide>
    <enable_wind>0</enable_wind>
    <kinematic>0</kinematic>
    <gravity>1</gravity>
    <!--<mu>1</mu>-->
    <mu2>1</mu2>
    <fdir1>0 0 0</fdir1>
    <!--<slip1>0</slip1>
     <slip2>0</slip2>-->
    <kp>1e+13</kp>
    <kd>1</kd>
    <!--<max_vel>0.01</max_vel>
     <min_depth>0</min_depth>-->
    <sensor name="robot_rear_realsense_cameracolor" type="camera">
      <camera name="robot_rear_realsense_camera">
        <horizontal_fov>1.21125850088</horizontal_fov>
        <image>
          <width>1920</width>
          <height>1080</height>
          <format>RGB_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>30</update_rate>
      <visualize>1</visualize>
    </sensor>
    <sensor name="robot_rear_realsense_cameraired1" type="camera">
      <camera name="robot_rear_realsense_camera">
        <horizontal_fov>1.4870205227</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>L_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.05</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>90</update_rate>
      <visualize>0</visualize>
    </sensor>
    <sensor name="robot_rear_realsense_cameraired2" type="camera">
      <camera name="robot_rear_realsense_camera">
        <horizontal_fov>1.4870205227</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>L_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.05</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>90</update_rate>
      <visualize>0</visualize>
    </sensor>
    <sensor name="robot_rear_realsense_cameradepth" type="depth">
      <camera name="robot_rear_realsense_camera">
        <horizontal_fov>1.4870205227</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.100</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>90</update_rate>
      <visualize>0</visualize>
    </sensor>
  </gazebo>
  <gazebo>
    <plugin filename="librealsense_gazebo_plugin.so" name="rear_realsense_camera">
      <prefix>robot_rear_realsense_camera</prefix>
      <depthUpdateRate>60.0</depthUpdateRate>
      <colorUpdateRate>60.0</colorUpdateRate>
      <infraredUpdateRate>60.0</infraredUpdateRate>
      <depthTopicName>depth/image_raw</depthTopicName>
      <depthCameraInfoTopicName>depth/camera_info</depthCameraInfoTopicName>
      <colorTopicName>color/image_raw</colorTopicName>
      <colorCameraInfoTopicName>color/camera_info</colorCameraInfoTopicName>
      <infrared1TopicName>infra1/image_raw</infrared1TopicName>
      <infrared1CameraInfoTopicName>infra1/camera_info</infrared1CameraInfoTopicName>
      <infrared2TopicName>infra2/image_raw</infrared2TopicName>
      <infrared2CameraInfoTopicName>infra2/camera_info</infrared2CameraInfoTopicName>
      <colorOpticalframeName>robot_rear_realsense_camera_color_optical_frame</colorOpticalframeName>
      <depthOpticalframeName>robot_rear_realsense_camera_depth_optical_frame</depthOpticalframeName>
      <infrared1OpticalframeName>robot_rear_realsense_camera_left_ir_optical_frame</infrared1OpticalframeName>
      <infrared2OpticalframeName>robot_rear_realsense_camera_right_ir_optical_frame</infrared2OpticalframeName>
      <rangeMinDepth>0.2</rangeMinDepth>
      <rangeMaxDepth>10.0</rangeMaxDepth>
      <pointCloud>false</pointCloud>
      <pointCloudTopicName>depth/points</pointCloudTopicName>
      <pointCloudCutoff>0.5</pointCloudCutoff>
    </plugin>
  </gazebo>
  <joint name="robot_imu_joint" type="fixed">
    <axis xyz="1 0 0"/>
    <!--origin xyz="0 0 0.2825"/-->
    <origin rpy="0 0 0" xyz="-0.1975 0.0 0.1598"/>
    <parent link="robot_base_link"/>
    <child link="robot_imu_link"/>
  </joint>
  <link name="robot_imu_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0.0 0 0.01"/>
      <mass value="0.05"/>
      <inertia ixx="3.33333333333e-06" ixy="0" ixz="0" iyy="3.33333333333e-06" iyz="0" izz="3.33333333333e-06"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size=".001 .001 .001"/>
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="libhector_gazebo_ros_imu.so" name="robot_imu_controller">
      <alwaysOn>true</alwaysOn>
      <topicName>imu/data</topicName>
      <serviceName>robot_imuimu/service</serviceName>
      <bodyName>robot_imu_link</bodyName>
      <frameId>robot_imu_link</frameId>
      <updateRate>50.0</updateRate>
      <gaussianNoise>0.00</gaussianNoise>
      <yawOffset>0.0</yawOffset>
      <yawDrift>0.0</yawDrift>
      <yawGaussianNoise>0.0</yawGaussianNoise>
      <!-- angular velocities parameters -->
      <rateOffset>0.0 0.0 0.0</rateOffset>
      <rateDrift>0.0 0.0 0.0</rateDrift>
      <rateGaussianNoise>0.0 0.0 0.0</rateGaussianNoise>
      <!-- linear accelerations parameters -->
      <accelOffset>0.0 0.0 0.0</accelOffset>
      <accelDrift>0.0 0.0 0.0</accelDrift>
      <accelGaussianNoise>0.0 0.0 0.0</accelGaussianNoise>
    </plugin>
  </gazebo>
  <joint name="robot_lidar_3d_base_joint" type="fixed">
    <origin rpy="0 -1.5707 3.1416" xyz="0.132 0.0 1.003"/>
    <parent link="robot_pole_link"/>
    <child link="robot_lidar_3d_base_link"/>
  </joint>
  <link name="robot_lidar_3d_base_link">
    <visual>
      <!-- origin xyz="0 0 0" rpy="0 0 1.5708"/ -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/rs_bpearl.stl"/>
      </geometry>
      <material name="blackgray_color">
        <color rgba="0.25 0.25 0.25 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/rs_bpearl.stl"/>
      </geometry>
    </collision>
    <inertial>
      <!-- The following are not reliable values, and should not be used for modeling -->
      <mass value="0.92"/>
      <origin xyz="0 0 0.055"/>
      <inertia ixx="0.00187227666667" ixy="0" ixz="0" iyy="0.00187227666667" iyz="0" izz="0.00188922"/>
    </inertial>
  </link>
  <joint name="robot_lidar_3d_joint" type="fixed">
    <parent link="robot_lidar_3d_base_link"/>
    <child link="robot_lidar_3d_link"/>
    <origin rpy="0 0 0" xyz="0 0 0.09427"/>
  </joint>
  <link name="robot_lidar_3d_link"/>
  <gazebo reference="robot_lidar_3d_base_link">
    <visual>
      <material>
        <ambient>0.5 0.5 0.5 1.0</ambient>
        <diffuse>0.250754 0.250754 0.250754 1.0</diffuse>
        <specular>0.2508273 0.2508273 0.2508273 1.0</specular>
        <emissive>0.0 0.0 0.0 0.0</emissive>
      </material>
    </visual>
  </gazebo>
  <gazebo reference="robot_lidar_3d_link">
    <visual>
      <material>
        <ambient>1.2 0.2 0.2 1.0</ambient>
        <diffuse>0.250754 0.250754 0.250754 1.0</diffuse>
        <specular>0.2508273 0.2508273 0.2508273 1.0</specular>
        <emissive>0.0 0.0 0.0 0.0</emissive>
      </material>
    </visual>
    <sensor name="robot_lidar_3d_sensor" type="gpu_ray">
      <pose>0 0 0 0 0 0.0</pose>
      <visualize>false</visualize>
      <update_rate>20.0</update_rate>
      <ray>
        <scan>
          <horizontal>
            <!-- for a high quality simulation -->
            <samples>900</samples>
            <min_angle>-3.14159265359</min_angle>
            <max_angle>3.14159265359</max_angle>
          </horizontal>
          <vertical>
            <samples>32</samples>
            <min_angle>-0.0872664625997</min_angle>
            <!-- bpearl has 90 degrees of vertical field of view-->
            <max_angle> 1.4835298642</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.1</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>none</type>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_velodyne_gpu_laser.so" name="robot_lidar_3d_controller">
        <topicName>lidar_3d/points</topicName>
        <frameName>/robot_lidar_3d_link</frameName>
        <gaussianNoise>0.008</gaussianNoise>
      </plugin>
    </sensor>
  </gazebo>
</robot>
